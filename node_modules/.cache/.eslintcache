[{"/Users/rrahate/Code/bingodaddy/src/index.js":"1","/Users/rrahate/Code/bingodaddy/src/App.js":"2","/Users/rrahate/Code/bingodaddy/src/reportWebVitals.js":"3","/Users/rrahate/Code/bingodaddy/src/firebaseConfig/firebaseConfig.js":"4","/Users/rrahate/Code/bingodaddy/src/pages/home.js":"5","/Users/rrahate/Code/bingodaddy/src/pages/gameSession.js":"6","/Users/rrahate/Code/bingodaddy/src/pages/router/routerError.js":"7","/Users/rrahate/Code/bingodaddy/src/components/molecules/bingoCard.js":"8","/Users/rrahate/Code/bingodaddy/src/components/molecules/calls.js":"9","/Users/rrahate/Code/bingodaddy/src/components/molecules/modal/modal.js":"10","/Users/rrahate/Code/bingodaddy/src/components/molecules/modal/modalContent.js":"11","/Users/rrahate/Code/bingodaddy/src/components/molecules/modal/modalPlayerName.js":"12","/Users/rrahate/Code/bingodaddy/src/components/utilities.js":"13","/Users/rrahate/Code/bingodaddy/src/components/atoms/form.js":"14","/Users/rrahate/Code/bingodaddy/src/components/atoms/cardcell.js":"15","/Users/rrahate/Code/bingodaddy/src/components/molecules/modal/modalVerify.js":"16","/Users/rrahate/Code/bingodaddy/src/components/molecules/playerList.js":"17","/Users/rrahate/Code/bingodaddy/src/components/molecules/bingoCalled.js":"18","/Users/rrahate/Code/bingodaddy/src/components/atoms/button.js":"19","/Users/rrahate/Code/bingodaddy/src/pages/gameEnd.js":"20","/Users/rrahate/Code/bingodaddy/src/components/molecules/players.js":"21"},{"size":498,"mtime":1678502317007,"results":"22","hashOfConfig":"23"},{"size":941,"mtime":1681488388812,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1675109457687,"results":"25","hashOfConfig":"23"},{"size":638,"mtime":1677166745526,"results":"26","hashOfConfig":"23"},{"size":5855,"mtime":1680527177955,"results":"27","hashOfConfig":"23"},{"size":12137,"mtime":1682244940208,"results":"28","hashOfConfig":"23"},{"size":334,"mtime":1677326972124,"results":"29","hashOfConfig":"23"},{"size":9670,"mtime":1682248062560,"results":"30","hashOfConfig":"23"},{"size":4125,"mtime":1682245179805,"results":"31","hashOfConfig":"23"},{"size":1469,"mtime":1682248928476,"results":"32","hashOfConfig":"23"},{"size":3754,"mtime":1682248151161,"results":"33","hashOfConfig":"23"},{"size":627,"mtime":1680526971809,"results":"34","hashOfConfig":"23"},{"size":1348,"mtime":1679223152689,"results":"35","hashOfConfig":"23"},{"size":1239,"mtime":1680526917392,"results":"36","hashOfConfig":"23"},{"size":2355,"mtime":1682248604787,"results":"37","hashOfConfig":"23"},{"size":2176,"mtime":1681396558243,"results":"38","hashOfConfig":"23"},{"size":916,"mtime":1679479596173,"results":"39","hashOfConfig":"23"},{"size":1862,"mtime":1680438966621,"results":"40","hashOfConfig":"23"},{"size":743,"mtime":1679740600726,"results":"41","hashOfConfig":"23"},{"size":2868,"mtime":1680622293789,"results":"42","hashOfConfig":"23"},{"size":421,"mtime":1680653723243,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"1pgllbk",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"47"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"47"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},"/Users/rrahate/Code/bingodaddy/src/index.js",[],[],[],"/Users/rrahate/Code/bingodaddy/src/App.js",["125","126","127","128","129","130","131"],[],"import { useState, useEffect } from 'react';\nimport { FireApp, Auth }  from \"./firebaseConfig/firebaseConfig.js\"\nimport logo from './logo.svg';\nimport './App.css';\nimport {\n  createBrowserRouter,\n  createHashRouter,\n  RouterProvider,\n} from \"react-router-dom\";\nimport RouterError from './pages/router/routerError.js';\nimport Home from './pages/home.js';\nimport GameSession from './pages/gameSession.js';\nimport GameEnd from './pages/gameEnd.js';\nimport Form from './components/atoms/form.js';\n\n\nfunction App() {\n\n  const router = createHashRouter([\n    {\n      path: \"/\",\n      element: <Home />,\n      errorElement: <RouterError />,\n    },\n    {\n      path: \"/:gameid\",\n      element: <GameSession />,\n      errorElement: <RouterError />,\n    },\n    {\n      path: \"/:gameid/end\",\n      element: <GameEnd />,\n      errorElement: <RouterError />,\n    }\n  ]);\n \n  return (\n    <RouterProvider router={router} />\n  );\n  \n}\n\nexport default App;\n","/Users/rrahate/Code/bingodaddy/src/reportWebVitals.js",[],[],"/Users/rrahate/Code/bingodaddy/src/firebaseConfig/firebaseConfig.js",[],[],"/Users/rrahate/Code/bingodaddy/src/pages/home.js",["132","133","134","135","136","137","138","139"],[],"import { useState, useEffect } from 'react';\nimport { DB, Auth }  from \"../firebaseConfig/firebaseConfig.js\"\nimport { nanoid } from 'nanoid';\nimport '../App.css';\nimport styled from '@emotion/styled'\nimport { signInAnonymously } from \"firebase/auth\";\nimport { onAuthStateChanged } from \"firebase/auth\"\nimport { doc, setDoc, collection, query, where, getDocs, onSnapshot } from \"firebase/firestore\"; \nimport { ReturnPlayerDB } from '../components/utilities.js';\nimport ModalPlayerName from '../components/molecules/modal/modalPlayerName.js';\nimport Button from '../components/atoms/button.js';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Home() {\n\n\n  const BG = styled.div`\n  background-color: #222;\n  color: #fff;\n  width: 100%;\n  height: 100%;\n  overflow: scroll;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 5%;\n  `\n  const ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  font-size: 0.4em;\n  margin-top: 20px;\n  & > div {\n      margin-right: 20px;\n  }\n  `\n  const Content = styled.div`\n  font-size: 5em;\n  text-align: center;\n  `\n\n\n    const [sessionID, setSessionID] = useState(nanoid(5))\n    const [recentSessions, setRecentSessions] = useState([])\n    const [playerData, setPlayerData] = useState([])\n    const [newPlayer, setNewPlayer] = useState(false)\n    const [join, setJoin] = useState(false)\n    const [playerName, setPlayerName] = useState(\"\")\n    const [adminID, setAdminID] = useState()\n    const navigate = useNavigate();\n\n    useEffect(() => {\n\n    \n        signInAnonymously(Auth)\n        .then(() => {\n          console.log(\"Signed In\")\n        })\n        .catch((error) => {\n          // Add Error Here\n        });\n    \n    \n        onAuthStateChanged(Auth, (user) => {\n          if (user) {\n            const uid = user.uid;\n            setAdminID(uid)\n          } else {\n            console.log(\"NOT\")\n          }\n        });\n    \n      });\n      \n\n      // Check if Admin has another session\n      useEffect(() => {\n      \n        if(adminID !== undefined) {\n            \n            const q = query(collection(DB, \"sessions\"), where(\"admin\", \"==\", adminID));\n            const newArray = []\n\n            const querySnapshot = async() => {\n                \n                const queryData = await getDocs(q);\n                \n                queryData.forEach((doc) => {\n                    const x = doc.data()\n                    newArray.push(x.sessionID)\n                });\n\n                setRecentSessions(newArray)\n\n            } \n\n\n            querySnapshot()\n            \n            \n              \n        }\n        \n      },[adminID])\n\n      useEffect(() => {\n        console.log(recentSessions)\n      },[recentSessions])\n\n      function joinSession() {\n        setJoin(true)\n      }\n\n      useEffect(() => {\n        if(join){\n          setNewPlayer(true)\n        }\n      },[join])\n\n      \n      async function createNewSession() {\n\n       const A = await ReturnPlayerDB(DB, adminID)\n\n       if (A != null) {\n        // Admin in Player DB\n\n        const docData= {\n          sessionID: sessionID,\n          sessionName: \"Test\",\n          admin: adminID,\n          sessionEnd: false, \n          players: [\n            {\n              playerName: A.playerName,\n              playerID: A.playerID,\n            }\n          ],\n          calls:[],\n          bingo:[],\n          calledNumber: 0\n\n        } \n        \n        const docRef = doc(DB, \"sessions\", sessionID) \n        const docSnap = await setDoc(docRef, docData);\n        navigate('/'+ sessionID)\n\n       } else {\n        // Admin Not in Player DB\n        setNewPlayer(true)\n\n       }\n\n      } // END CREATE SESSION\n\n      function recNameValue(x) {\n        setPlayerName(x)\n      }\n\n      useEffect(() => {\n        if(playerName.length !== 0 && !join) {\n          setNewPlayer(false)\n          const playerDocData= {\n            playerName: playerName,\n            playerID: adminID,\n          }\n\n          const sessionDocData= {\n            sessionID: sessionID,\n            sessionName: \"Test\",\n            admin: adminID,\n            sessionEnd: false, \n            players: [\n              {\n                playerName: playerName,\n                playerID: adminID\n              }\n            ],\n            calls:[],\n            bingo: [],\n            calledNumber: 0\n\n          } \n          \n          const sessionDocRef = doc(DB, \"sessions\", sessionID) \n          const playerDocRef = doc(DB, \"players\", adminID) \n          \n          async function AddNewPlayer() {\n            const sessionDocSnap = await setDoc(sessionDocRef, sessionDocData);\n            const playerDocSnap = await setDoc(playerDocRef, playerDocData);\n            navigate('/'+ sessionID)\n          }\n          \n          AddNewPlayer()\n        } else if(playerName.length !== 0 && join) {\n          navigate('/' + playerName)\n        }\n      },[playerName])\n\n  \n\n      return(\n        <BG>\n            <Content>\n              Welcome to BinGoDaddy\n              <ButtonContainer>\n                  <Button onClick={createNewSession}>Start a New Session</Button>\n                  <Button onClick={joinSession}>Join a Session</Button>\n              </ButtonContainer>\n            </Content>\n\n            {/* {recentSessions&& \n                <>\n                    <h2>Ongoing sessions</h2>\n                    <ul>\n                    {recentSessions.map((session, index) =>  \n                            <li key={index}>{session}</li>  \n                    )}  \n                    </ul>    \n                    \n                </>\n            } */}\n\n            {newPlayer&& \n              <ModalPlayerName value={recNameValue} join={join} />\n            }          \n            \n            \n            \n        </BG>\n      );\n}\n\nexport default Home","/Users/rrahate/Code/bingodaddy/src/pages/gameSession.js",["140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158"],[],"import { useState, useEffect } from 'react';\nimport BingoCard from '../components/molecules/bingoCard.js';\nimport Calls from '../components/molecules/calls.js';\nimport ModalPlayerName from '../components/molecules/modal/modalPlayerName.js';\nimport { GenerateCard, ReturnCardData } from '../components/utilities.js';\nimport { DB, Auth }  from \"../firebaseConfig/firebaseConfig.js\"\nimport '../App.css';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { signInAnonymously } from \"firebase/auth\";\nimport { onAuthStateChanged } from \"firebase/auth\"\nimport { doc, setDoc, getDoc, collection, updateDoc, arrayUnion, getDocs, onSnapshot, arrayRemove, writeBatch } from \"firebase/firestore\"; \nimport Modal from '../components/molecules/modal/modal.js';\nimport PlayerList from '../components/molecules/playerList.js';\nimport BingoCalled from '../components/molecules/bingoCalled.js';\nimport Button from '../components/atoms/button.js';\nimport Players from '../components/molecules/players.js';\nimport { MdOutlineGridOn, MdRule, MdCampaign } from \"react-icons/md\";\n\n\nfunction GameSession() {\n    \n    const [gameEnd, setGameEnd] = useState(false)\n    const [playerID, setPlayerID] = useState()\n    const [newPlayer, setNewPlayer] = useState(false)\n    const [bingoCalled, setBingoCalled] = useState(false)\n    const [bingoCalledList, setBingoCalledList] = useState([])\n    const [playerName, setPlayerName] = useState(\"\")\n    const [playerList, setPlayerList] = useState([])\n    const [newCardAdded, setNewCardAdded] = useState(false) \n    const [modalVisibility, setModalVisibility] = useState(false)\n    const [cards, setCards] = useState([]) \n    const [calls, setCalls] = useState([]) \n    const [adminID, setAdminID] = useState()\n    const [admin, setAdmin] = useState(false)\n    let { gameid } = useParams();\n    const navigate = useNavigate()\n    \n\n    \n    // GET PARAMS from the url - DONE\n    // Subscribe to player list - Is this needed?\n    // On ENTER\n    // IF ADMIN - Get user data from DB\n    // Create a card and add cardID to session card array\n\n    // SHOW ADMIN A Button to end session\n    // Subscribe to CARDS\n\n    // If NOT ADMIN - Sign user In and \n    // IF UUID IS not it DB ask for a name and email\n    // IF UUID is in DB then add playerID to session player array\n\n    // On EXIT USER\n\n    //Subscribe to the SESSION PlayerList and Bingo Calls\n    useEffect(() => {\n\n        const unsub = onSnapshot(doc(DB, \"sessions\", gameid), (doc) => {\n          const x = doc.data()\n          const play = x.players\n          setPlayerList(x.players) \n          setAdminID(x.admin)\n          setBingoCalledList(x.bingo)\n          setGameEnd(x.sessionEnd)\n          setCalls(x.calls)\n        });\n\n        return () => unsub();\n\n    },[])\n\n    // SESSION END\n    // Check game status\n    useEffect(() => {\n      if(gameEnd) {\n        navigate('/'+ gameid + '/end',  { state: { \n          \"admin\": adminID,\n          \"playerName\" : playerName,\n          \"playerID\" : playerID,\n        } })\n      }\n    },[gameEnd])\n\n    async function adminGameEnd() {\n\n      const sessionRef = doc(DB, \"sessions\", gameid)\n      const setGameStop = await updateDoc(sessionRef, {\n        sessionEnd: true\n      }); \n\n    }\n\n    // useEffect(() => {\n    //   console.log(\"render Cards\")\n    // },[cards])\n\n    // DID SOMEONE CALL BINGO\n    useEffect(() => {\n      if(Object.keys(bingoCalledList).length !== 0) {\n        setBingoCalled(true) \n      }\n    },[bingoCalledList])\n\n    // ON SESSION END BY ADMIN\n\n\n    // AUTHENTICATION\n    useEffect(() => {\n    \n        onAuthStateChanged(Auth, (user) => {\n          if (user) {\n            const uid = user.uid;\n            setPlayerID(uid)\n            \n          } else {\n            signInAnonymously(Auth)\n            .then(() => {\n              console.log(\"Signed In\")\n            })\n            .catch((error) => {\n              // Add Error Here\n            });\n          }\n        });\n\n      \n      },[]);\n\n\n       \n\n      // Brand New card for new or exisitng players\n      // async function BrandNewCard() {\n\n      //   console.log(\"Creating Brand New Card\")\n      //   const cardRef = doc(DB, \"players\", playerID, \"cards\", gameid)\n      //   const cardData= GenerateCard()\n      //   const newCard = {\n      //     sessionCards: [cardData]\n      //   }\n      //   const setCardsSnap = await setDoc(cardRef, newCard);\n      //   setNewCardAdded(true)\n      // }\n\n      // CHECK ABOUT PLAYER POST AUTHENTICATION\n      \n      useEffect(()=> {\n       \n        if(playerID) {  \n\n          //UTILS - CHECK IF PLAYER HAS CARDS FUNCTION\n          // async function getCards() {\n          //   const A = await ReturnCardData(DB, playerID, gameid)\n          //   if(A !== null) {\n          //     // PLAYER HAS CARDS\n          //     setCards(A.sessionCards)\n          //   } else {\n          //     // PLAYER DOES NOT HAVE CARDS\n          //     BrandNewCard();\n          //   }\n          // } // END GETCARDS\n          \n          //UTILS - ADD PLAYER TO PLAYER OR GAME DB\n          async function AddPlayerDB() {            \n            \n            const playersRef = doc(DB, \"players\", playerID)\n            const playerSnap = await getDoc(playersRef);\n            const sessionRef = doc(DB, \"sessions\", gameid)\n            \n            // CHECK IF PLAYER IS IN PLAYER DATABASE\n            if (playerSnap.exists()) {\n              setNewPlayer(false)   \n              // YES PLAYER IN PLAYER DATABASE\n              const x = playerSnap.data();\n              setPlayerName(x.playerName);\n              \n              const playerDataSession= {\n                playerID: playerID,\n                playerName: x.playerName,\n              }\n              \n              // ADD PLAYER TO GAMES DB\n\n              const writeArray = await updateDoc(sessionRef, {\n                players: arrayUnion(playerDataSession)\n              });\n\n              // PLAYER ADDED TO GAMES DB\n              // GET PLAYER CARDS\n              // getCards();\n              \n              \n            } else {\n              // NO, PLAYER NOT IN PLAYER DATABASE\n              setNewPlayer(true)              \n              \n            }\n\n          } // END ADD PLAYER DB\n          \n          \n          // CHECK IF PLAYER IS IN GAME DATABASE\n          if(Object.keys(playerList).length !== 0) {\n            let finder = playerList.some(x => x.playerID === playerID)\n            \n            if(finder) {\n              // PLAYER IS IN GAME DB && SET PLAYER NAME\n              let newfinder = playerList.find(x => x.playerID === playerID)\n              setPlayerName(newfinder.playerName)\n              // getCards();\n              \n            } else {\n              // PLAYER IS NOT IN GAME DB\n              // IF PLAYER IS IN PLAYER DB ADD TO GAME\n              AddPlayerDB()\n\n            }\n            \n          } else {\n            // Player List is not coming back\n            console.log(\"0 Players\")\n            \n          }\n\n        }\n\n      },[playerID, playerList])\n\n\n      useEffect(() => {\n        if(newPlayer) {\n          if(playerName.length !== 0) {\n            const playerData= {\n              playerID: playerID,\n              playerName: playerName,\n            }\n\n            const playerDataSession= {\n              playerID: playerID,\n              playerName: playerName,\n            }\n\n            const playersRef = doc(DB, \"players\", playerID)\n            const sessionRef = doc(DB, \"sessions\", gameid)\n            \n            // ADD PLAYER TO SESSION AND PLAYER DB\n            async function AddPlayerSessionDB () {\n              const setPlayerSnap = await setDoc(playersRef, playerData);\n              \n              const setGameSnap = await updateDoc(sessionRef, {\n                players: arrayUnion(playerDataSession)\n              });\n            }\n            \n            AddPlayerSessionDB();\n            CreateNewCard();\n               \n          } \n        }\n      },[playerName])\n      \n\n\n      // // ONCE NEW CARD IS ADDED GET IT FOR DB\n      // useEffect(() => {\n      //   if(newCardAdded) {\n      //     async function gettingNewCard() {\n      //       const A = await ReturnCardData(DB, playerID, gameid)\n              \n      //         if(A !== null) {\n      //           setCards(A.sessionCards)\n      //         } \n      //     }\n      //     gettingNewCard();\n\n      //   } \n\n      // },[newCardAdded])\n\n      // Refresh Cards\n      useEffect(()=> {\n        setNewCardAdded(false);\n      },[cards])\n      \n      // THIS WILL MAKE SURE THAT ADMIN ID IS RECIEVED AND ADMIN IS SET TRUE\n      useEffect(()=> {\n        if((adminID!== undefined || playerID !== undefined) && (adminID == playerID)) {\n          setAdmin(true)\n        } \n      },[adminID, playerID])\n\n\n\n\n      //CREATE A CARD FROM LINK FUNCTION\n      async function CreateNewCard() {\n\n          if (Object.keys(cards).length == 5) {\n            alert(\"Bingo Card Limit Reached\")\n          } else {\n\n            // CREATE NEW CARD\n            const cardData = GenerateCard()\n            const A = await ReturnCardData(DB, playerID, gameid)\n              \n            if(A !== null) {\n              const cardRef = doc(DB, \"players\", playerID, \"cards\", gameid)\n              const writeCardArray = await updateDoc(cardRef, {\n                sessionCards: arrayUnion(cardData)\n              });\n              setNewCardAdded(true)\n\n            } else {\n\n              // BrandNewCard();\n              setNewPlayer(false); \n            }\n\n          }\n\n      } \n\n      function recNameValue(x) {\n        setPlayerName(x)\n      }\n\n      function bCalled(bcalled) {\n        \n        console.log(bcalled, playerID, playerName)\n\n        const sessionRef = doc(DB, \"sessions\", gameid)\n\n          async function PlayerCalledBingoSessionDB (bcalled) {\n            \n            const playerDataSession= {\n              playerID: playerID,\n              playerName: playerName,\n              \n            }\n\n            const writeBingoArray = await updateDoc(sessionRef, {\n              bingo: arrayUnion(playerDataSession)\n            });\n\n          \n\n          }\n          \n          PlayerCalledBingoSessionDB();\n\n      }\n\n      // VERIFY CARDS IF ADMIN\n      function verifyCards() {\n        if(admin) {\n          setModalVisibility(true)\n        }\n      }\n\n      return(\n        <div className=\"player-page-layout\">\n\n          {newPlayer&& \n            <ModalPlayerName value={recNameValue}  />\n          }\n          \n          <div className=\"player-card-area\">\n          \n            <BingoCard  newCardAdded={newCardAdded} calls={calls} />\n                        \n            <Modal visible={modalVisibility} setVisibility={() => setModalVisibility(false)}  verify={true} calledList={bingoCalledList}  />\n            \n          </div>\n\n          <div className='player-right-pane-area'>\n            \n            \n            <div className='right-rail-container'>\n              \n              {bingoCalled&&\n                \n                  <BingoCalled list={bingoCalledList} verify={() => verifyCards()} />\n                \n              }\n\n              {admin&& \n                <>\n                <br />\n                <Button onClick={adminGameEnd}>\n                  End Game\n                </Button>\n                </>\n              }\n\n              <br />    \n              <Button onClick={bCalled}>\n                <MdCampaign className=\"icon\" /><br />\n                Call Bingo\n              </Button>\n              \n            </div>\n\n            <Calls admin={admin} gameid={gameid} gameEnd={() => setGameEnd(true)} />\n            \n\n            <div className='right-rail-container'>\n              <div className='btn-group'>\n                <Button onClick={CreateNewCard} secondary><MdOutlineGridOn className='icon' /> Add a Card</Button>\n                <Button secondary><MdRule className='icon' /> Game Rules</Button>\n              </div>\n            </div>\n\n            {(playerList.length !== 0)&&\n\n              <PlayerList playerList={playerList} />\n\n            }\n           \n          </div>\n\n          \n            \n        </div>\n      );\n}\n\nexport default GameSession","/Users/rrahate/Code/bingodaddy/src/pages/router/routerError.js",[],[],"/Users/rrahate/Code/bingodaddy/src/components/molecules/bingoCard.js",["159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199"],[],"import { useState, useEffect, useMemo } from 'react';\nimport styled from '@emotion/styled'\nimport CardCell from '../atoms/cardcell';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { ReturnCardData, GenerateCard } from '../utilities';\nimport { DB, Auth }  from \"../../firebaseConfig/firebaseConfig.js\"\nimport { onAuthStateChanged } from \"firebase/auth\"\nimport { doc, setDoc, getDoc, collection, updateDoc, arrayUnion, getDocs, onSnapshot, arrayRemove, writeBatch } from \"firebase/firestore\"; \n\nfunction BingoCard(props) {\n\n    const CardContainer = styled.div`\n        display: flex;\n        flex-direction: row;\n        height: 100%;\n        align-items: center;\n        overflow: scroll;\n        padding: 0 20px;\n\n        & > div {\n            margin: 10px 20px;\n            padding: 0 20px;\n            background-color: #002e2c;\n            border-radius: 10px;\n        }\n    `\n    \n    const Card = styled.div`\n        display: flex;\n        flex-direction: row;\n        \n        font-size: 2em;\n        justify-content: flex-start;\n    `\n    const CardCol = styled.div`\n        padding: 0;\n        margin: 0\n    `\n\n    const CardTitle = styled.div`\n        \n        font-weight: 600;\n        font-size: 1.3em;\n\n        \n    `\n\n    const [bCalled, setBCalled] = useState(false)\n    const [cards, setCards] = useState([])\n    const [playerID, setPlayerID] = useState()\n    const [newCardAdded, setNewCardAdded] = useState(props.newCardAdded) \n    const [calledArray, setCalledArray] = useState([])\n    const [clickedCellArray, setClickedCellArray] = useState([])\n    let { gameid } = useParams();\n    \n\n    useEffect(() => {\n        setCalledArray(props.calls)\n        GetClickedCells()\n        console.log(\"Card Refresh\")\n    },[props.calls])\n\n    async function GetClickedCells() {\n        \n        const cardCellClickRef = doc(DB, \"players\", playerID, \"cardsCellClick\", gameid)\n        const cellSnap = await getDoc(cardCellClickRef);\n        \n        if (cellSnap.exists()) {\n          const x = cellSnap.data()\n          setClickedCellArray(x)\n          \n        } \n    }\n\n    useEffect(() => {\n\n        if(playerID) {\n\n        const unsub = onSnapshot(doc(DB, \"players\", playerID, \"cardsCellClick\", gameid), (doc) => {\n          const x = doc.data()\n          setClickedCellArray(x)\n        \n        });\n\n        return () => unsub();\n        }\n\n    },[])\n\n    function bingoCalled () {\n        props.bingoCalled(true)\n    }\n\n\n    function check(x) {\n       \n       const A = calledArray\n       if((A !== undefined) && (A !== null)) {\n            if(x == \"FREE\") {\n                return true\n            } else return A.includes(x)\n       }\n       \n       \n    }\n\n    function checkClicked(x, ind) {\n\n       const A = clickedCellArray\n       if(x == \"FREE\") return true\n       else if((A[ind] !== undefined) && (A[ind] !== null)) {\n            if(A[ind].includes(x)) return true\n            else return false\n       }\n    }\n\n    // Set Clicked Cells\n    async function cellClickDB(x,y) {\n        \n        const cardCellClickRef = doc(DB, \"players\", playerID, \"cardsCellClick\", gameid)\n\n        const newCardCellClick = { \n                [y]: arrayUnion(x)\n          }\n         \n        const cellSnap = await getDoc(cardCellClickRef);\n        \n        if (cellSnap.exists()) {\n            const setCardsSnap = await updateDoc(cardCellClickRef, newCardCellClick);\n\n        } else {\n            \n            const setCardsSnap2 = await setDoc(cardCellClickRef, newCardCellClick);\n        }\n\n    }\n\n    function cellClick(item,cardnumber) {\n\n        const isCalled = check(item)\n        if(isCalled) {\n            cellClickDB(item,cardnumber)\n        } else return false\n\n    }\n\n\n    useEffect(() => {\n        console.log(props.newCardAdded)\n    },[props.newCardAdded])\n\n\n    // ONCE NEW CARD IS ADDED GET IT FOR DB\n    useEffect(() => {\n\n        if(newCardAdded || props.newCardAdded) {\n          async function gettingNewCard() {\n            const A = await ReturnCardData(DB, playerID, gameid)\n              \n              if(A !== null) {\n                setCards(A.sessionCards)\n              } \n          }\n          gettingNewCard();\n\n        } \n\n      },[newCardAdded, props.newCardAdded])\n\n      // Refresh Cards\n      useEffect(()=> {\n        setNewCardAdded(false);\n\n      },[cards])\n\n    \n\n\n   \n\n    // BRAND NEW CARDS FOR EXISTING PLAYER\n    async function BrandNewCard() {\n\n        console.log(\"Creating Brand New Card\")\n        const cardRef = doc(DB, \"players\", playerID, \"cards\", gameid)\n        const cardData= GenerateCard()\n        const newCard = {\n          sessionCards: [cardData]\n        }\n        const setCardsSnap = await setDoc(cardRef, newCard);\n        setNewCardAdded(true)\n    }\n\n    async function getCards() {\n        const A = await ReturnCardData(DB, playerID, gameid)\n        if(A !== null) {\n          // PLAYER HAS CARDS\n          setCards(A.sessionCards)\n        } else {\n          // PLAYER DOES NOT HAVE CARDS\n          BrandNewCard();\n        }\n    } // END GETCARDS\n\n\n\n\n    useEffect(() => {\n        if(playerID) {\n            getCards()\n        }\n    },[playerID])\n\n    // AUTHENTICATION\n    useEffect(() => {\n    \n        onAuthStateChanged(Auth, (user) => {\n          if (user) {\n            const uid = user.uid;\n            setPlayerID(uid)      \n          } \n        });\n\n    },[]);\n\n\n    return(\n        <CardContainer>\n        {cards&&\n          <>\n          \n              {cards.map((card, index) => \n              <div>\n                {/* <CardTitle>\n                    <p>Card {index+1}</p>\n                </CardTitle> */}\n\n                <Card key={\"Card\" + `${index}`}>\n                    \n                    <CardCol key={\"B\" + `${index}`}>\n                        <CardCell title>B</CardCell>\n                        {card.b.map((item, index2) => \n                            <CardCell \n                            key={\"B\" + `${index}` + `${index2}`+ `${item}`} \n                                active={checkClicked(item, index)? true : false}\n                                item={item}\n                                cardnumber={index}\n                                cellClick={cellClick}\n                                calls={calledArray}\n                            >\n                                {item}\n                            \n                            </CardCell>\n                        )}  \n                        \n                    </CardCol>\n\n                    <CardCol key={\"I\" + `${index}`}>\n                        <CardCell title>I</CardCell>\n                        {card.i.map((item, index2) => \n                            <CardCell \n                                key={\"I\" + `${index}` + `${index2}` + `${item}`}\n                                active={checkClicked(item, index)? true : false}\n                                item={item}\n                                cardnumber={index}\n                                cellClick={cellClick}\n                                calls={calledArray}\n                            >\n                                {item}\n                            </CardCell>\n                        )}  \n                        \n                    </CardCol>\n\n                    <CardCol key={\"N\" + `${index}`}>\n                        <CardCell title>N</CardCell>\n                        {card.n.map((item, index2) => \n                            <CardCell \n                                key={\"N\" + `${index}` + `${index2}` + `${item}`}\n                                active={checkClicked(item, index)? true : false}\n                                item={item}\n                                cardnumber={index}\n                                cellClick={cellClick}\n                                calls={calledArray}   \n                            >\n                                {item == \"FREE\" ? \"😎\" : item }\n                            </CardCell>                \n                        )}  \n                        \n                    </CardCol>\n\n                    <CardCol key={\"G\" + `${index}`}>\n                        <CardCell title>G</CardCell>\n                        {card.g.map((item, index2) => \n                            <CardCell \n                            key={\"G\" + `${index}` + `${index2}` + `${item}`}\n                            active={checkClicked(item, index)? true : false}\n                            item={item}\n                            cardnumber={index}\n                            cellClick={cellClick}\n                            calls={calledArray}\n                            >\n                                {item}\n                            </CardCell>\n                        )}  \n                        \n                    </CardCol>\n\n                    <CardCol key={\"O\" + `${index}`}>\n                        <CardCell title>O</CardCell>\n                        {card.o.map((item, index2) => \n                            <CardCell \n                            key={\"O\" + `${index}` + `${index2}` + `${item}`}\n                            active={checkClicked(item, index)? true : false}\n                            item={item}\n                            cardnumber={index}\n                            cellClick={cellClick}\n                            calls={calledArray}\n                            >\n                                {item}\n                            </CardCell>\n                        )}  \n                        \n                    </CardCol>\n                \n                </Card>\n              </div>\n              )}\n            \n          </>\n          }\n        </CardContainer>\n    )\n}\n\nexport default BingoCard\n","/Users/rrahate/Code/bingodaddy/src/components/molecules/calls.js",["200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215"],[],"import { useState, useEffect } from 'react';\nimport styled from '@emotion/styled'\nimport { doc, setDoc, getDoc, updateDoc, onSnapshot, arrayUnion } from \"firebase/firestore\"; \nimport { DB } from \"../../firebaseConfig/firebaseConfig.js\"\nimport Modal from './modal/modal.js';\nimport Button from '../atoms/button.js';\nimport '../../App.css';\n\nfunction Calls(props) {\n    \n    const[calledArray, setCalledArray]= useState([]);\n    const[calledNumber, setCalledNumber]= useState();\n    const[calledNumberDB, setCalledNumberDB]= useState();\n    const [modalVisibility, setModalVisibility] = useState(false)\n    const [modalContent, setModalContent] = useState()\n\n\n    var ArraySeventyFive = Array.from({length: 75}, (_, i) => i + 1)\n    const callsRef = doc(DB, \"sessions\", props.gameid)\n    \n    // useEffect(() => {\n\n    //     async function GetCalls() {\n            \n    //         const callsSnap = await getDoc(callsRef);\n            \n    //         if (callsSnap.exists()) {\n    //           const x = callsSnap.data()\n    //           setCalledArray(x.calls)\n              \n    //         } \n    //       }\n          \n    //       GetCalls();\n          \n    // },[props.gameid])\n\n    useEffect(() => {\n        if(calledArray.length == 75){\n            props.gameEnd(true)\n        }\n    },[calledArray])\n\n\n    useEffect(()=> {\n\n        \n\n        if(calledNumberDB !== undefined && calledNumberDB !== 0) {\n\n\n            async function SetCalls() {\n        \n                const writeArray = await updateDoc(callsRef, {\n                    calls: arrayUnion(calledNumberDB)\n                });\n\n                const writeCallNumber = await updateDoc(callsRef, {\n                    calledNumber: calledNumberDB\n                });\n\n            } \n              \n            SetCalls();\n        } \n\n    },[calledNumberDB])\n\n    useEffect(() => {\n\n        const unsub = onSnapshot(doc(DB, \"sessions\", props.gameid), (doc) => {\n            const x = doc.data()\n            setCalledArray(x.calls)\n            setCalledNumber(x.calledNumber)\n          });\n\n          return () => unsub();\n    },[])\n\n\n    function Shuffle(a) {\n            \n        for (let i = a.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [a[i], a[j]] = [a[j], a[i]];\n        }\n        return a;\n    }\n\n \n\n    function NewCall() {\n        \n        if(calledArray !== undefined) {\n            \n            let difference = ArraySeventyFive.filter(x => !calledArray.includes(x))\n            let shuffled = Shuffle(difference)\n            let result = shuffled.pop();\n            setCalledNumberDB(result)\n        }\n \n\n    }\n\n    function GetLetter(x) {\n        \n        if(x > 0 && x <= 15) {\n            return \"B\"\n        } else if(x >=   16 && x <= 30) { return \"I\" }\n        else if( x >= 31 && x <= 45) { return \"N\" }\n        else if(x >= 46 && x <= 60) { return \"G\" }\n        else if(x >= 61 && x <= 75) { return \"O\" }\n    }\n\n    function RecentCalls() {\n        setModalVisibility(true)\n    }\n\n    return(\n        <div className='right-rail-container '>  \n            <h3 className='rr-h2s'>Calls \n                {(Object.keys(calledArray).length != 0)&&\n                <div className=\"pill\">\n                    {calledArray.length}\n                </div>\n                }\n            </h3>\n\n        \n            {(Object.keys(calledArray).length == 0)&&\n                <>Game is yet to start</>\n            }\n            {(calledNumber !== 0)&&\n                <b>{GetLetter(calledNumber)} - {calledNumber}</b>\n            }\n\n            <div className='callsContainer'>\n                {/* {props.admin&& */}\n                    \n                    <a onClick={NewCall} secondary>Call It</a>\n\n                {/* } */}\n                \n                {(calledArray.length !== 0)&&\n\n                    <a onClick={RecentCalls} secondary>View Previous Calls</a>\n                }\n            </div>\n            <Modal visible={modalVisibility} setVisibility={() => setModalVisibility(false)}  modalContent={calledArray} />\n            \n            \n        </div>\n    )\n}\n\nexport default Calls\n","/Users/rrahate/Code/bingodaddy/src/components/molecules/modal/modal.js",["216","217"],[],"import { useState, useEffect } from 'react';\nimport ModalContent from './modalContent';\nimport ModalVerify from './modalVerify';\nimport styled from '@emotion/styled'\n\nfunction Modal(props) {\n\n    // useEffect(()=> {\n    //     console.log(props.visible)\n    // },[props.visible])\n\n    const ModalBg = styled.div`\n        background-color: #222;\n        width: ${props => (props.modalC ? '50%' : '100%')};\n        height: 100%;\n        z-index: 20;\n        position: absolute;\n        overflow: scroll;\n        display: flex;\n        flex-direction: column;\n        left: ${props => (props.modalC ? '50%' : '0')};;\n        top: 0;\n        padding: 5%;\n\n        & > div:nth-child(1) {\n\n            text-align: right;\n            align-self: flex-end;\n        }\n    \n    `\n\n    const CloseBtn = styled.a`\n        text-align: right;\n    `\n\n    \n    if (props.visible) {\n        return (\n            <ModalBg modalC={props.modalContent}>\n                <div>\n                    <CloseBtn onClick={props.setVisibility}>\n                        Close\n                    </CloseBtn>\n                </div>\n                {props.modalContent&&\n                    <ModalContent modalContent={props.modalContent}  />\n                }\n                {props.verify&&props.calledList&&\n                    <ModalVerify calledList={props.calledList} />\n                }\n            </ModalBg>\n        )\n\n    } else {\n        return null\n    }\n\n        \n}\n\nexport default Modal","/Users/rrahate/Code/bingodaddy/src/components/molecules/modal/modalContent.js",["218","219","220","221","222","223","224","225","226","227","228"],[],"import { useState, useEffect } from 'react';\nimport styled from '@emotion/styled'\n\nfunction ModalContent(props) {\n\n\n    const CallsContainer = styled.div`\n        display: flex;\n        flex-direction: row;\n        width: 60%;\n        align-self: center;\n        flex-wrap: wrap;\n        justify-content: space-evenly;\n        margin-top: 50px;\n    `\n\n    const CallsRow = styled.div`\n        width: 20%;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n    `\n    const CallsCell = styled.div`\n        text-align: center;\n        width: 90%;\n        height: 100px;\n        font-size: 2em;\n        display: flex;\n        margin: 20px 0;\n        align-items: center;\n        justify-content: center;\n        background-color: ${props => (props.called ? '#f9bc60' : props.title ? '#000' : '#fff')};\n        color: ${props => (props.title ? '#fff' : '#001e1d')};\n        border: 2px solid #272343;\n        border-radius: 10px;\n        margin: 10px 5px;\n        \n        \n    `\n\n    var ArraySeventyFive = Array.from({length: 75}, (_, i) => i + 1)\n    \n    useEffect(() => {\n        console.log(props.modalContent)\n    },[props.modalContent])\n\n    \n    return (\n\n        <CallsContainer>\n            <CallsRow>\n                <CallsCell title>B</CallsCell>\n                    {ArraySeventyFive.slice(0,15).map((item, index) => \n                        \n                            <CallsCell key={\"calls\" + `${index}` + `${item}`} called={props.modalContent.includes(item)? true : false}>\n                                {item}\n                            </CallsCell>\n                            \n\n                        )\n                    } \n            </CallsRow>\n            <CallsRow>\n            <CallsCell title>I</CallsCell>\n                    {ArraySeventyFive.slice(15,30).map((item, index) => \n                        \n                            <CallsCell key={\"calls\" + `${index}` + `${item}`} called={props.modalContent.includes(item)? true : false}>\n                                {item}\n                            </CallsCell>\n                            \n\n                        )\n                    } \n            </CallsRow>\n            <CallsRow>\n            <CallsCell title>N</CallsCell>\n                    {ArraySeventyFive.slice(30,45).map((item, index) => \n                        \n                            <CallsCell key={\"calls\" + `${index}` + `${item}`} called={props.modalContent.includes(item)? true : false}>\n                                {item}\n                            </CallsCell>\n                            \n\n                        )\n                    } \n            </CallsRow>\n            <CallsRow>\n            <CallsCell title>G</CallsCell>\n                    {ArraySeventyFive.slice(45,60).map((item, index) => \n                        \n                            <CallsCell key={\"calls\" + `${index}` + `${item}`} called={props.modalContent.includes(item)? true : false}>\n                                {item}\n                            </CallsCell>\n                            \n\n                        )\n                    } \n            </CallsRow>\n            <CallsRow>\n            <CallsCell title>O</CallsCell>\n                    {ArraySeventyFive.slice(60,75).map((item, index) => \n                        \n                            <CallsCell key={\"calls\" + `${index}` + `${item}`} called={props.modalContent.includes(item)? true : false}>\n                                {item}\n                            </CallsCell>\n                            \n\n                        )\n                    } \n            </CallsRow>\n            \n        </CallsContainer>\n    )\n\n        \n}\n\nexport default ModalContent","/Users/rrahate/Code/bingodaddy/src/components/molecules/modal/modalPlayerName.js",["229","230"],[],"import { useState, useRef} from 'react';\nimport Form from '../../atoms/form';\nimport styled from '@emotion/styled'\n\n\n\n\nconst ModalPlayerName = (props) => {\n\n    \n\n    const ModalBg = styled.div`\n        background-color: #222;\n        width: 100%;\n        height: 100%;\n        z-index: 20;\n        position: absolute;\n        left: 0;\n        top: 0;\n        padding: 5%;\n\n        & > div:nth-child(1) {\n\n            text-align: right;\n        }\n    \n    `\n        \n    return (\n        <ModalBg>\n            <Form value={props.value} join={props.join} />\n        </ModalBg>\n    )\n\n\n\n        \n}\n\nexport default ModalPlayerName","/Users/rrahate/Code/bingodaddy/src/components/utilities.js",["231","232","233","234","235","236"],[],"import { doc, setDoc, getDoc, collection, updateDoc, arrayUnion, getDocs, onSnapshot } from \"firebase/firestore\"; \n// Generate a Card\nexport function GenerateCard() {\n\n    const B = randomUnique(0,15)\n    const I = randomUnique(16,30)\n    const NOld = randomUnique(31,45)\n    const N = Object.assign([], NOld, {2: \"FREE\"});\n    const G = randomUnique(46,60)\n    const O = randomUnique(61,75)\n    const Card = {\n\n      b: B,\n      i: I,\n      n: N,\n      g: G,\n      o: O\n\n    }\n\n    return Card\n\n}\n\n// Generate a Random Array \nconst randomUnique = (min, max) => {\n    let nums = new Set();\n    const range = max - min + 1\n\n    while (nums.size < 5) {\n        nums.add(Math.floor(Math.random() * range + min));\n    }\n    return [...nums];\n}\n\n\nexport async function ReturnCardData(database, pid, gid) {\n\n    const cardRef = doc(database, \"players\", pid, \"cards\", gid)\n    const cardSnap = await getDoc(cardRef);\n\n    if (cardSnap.exists()) {\n        \n        const x = cardSnap.data()\n        return x;\n\n        \n      } else{\n\n        return null;\n        \n      }\n}\n\n\nexport async function ReturnPlayerDB(database, pid) {\n  const playerRef = doc(database, \"players\", pid)\n  const playerSnap = await getDoc(playerRef);\n\n  if (playerSnap.exists()) {\n        \n    const x = playerSnap.data()\n    return x;\n\n    \n  } else{\n\n    return null;\n    \n  }\n\n}","/Users/rrahate/Code/bingodaddy/src/components/atoms/form.js",["237","238","239","240"],[],"import { useState, useRef, useEffect, useCallback } from 'react';\nimport Button from './button';\nimport styled from '@emotion/styled'\nimport \"../atoms/form.css\"\n\n\n\n\nconst Form = (props) => {\n\n  const Container = styled.div`\n   \n\n    & > div {\n      \n      \n      & > div {\n        width: 50%;\n      }\n    }\n\n  `\n\n    const [textInput, setTextInput] = useState(\"\");\n    const [showError, setShowError] = useState(false);\n\n    \n\n    function save() {\n      if(Object.keys(textInput).length !== 0) {\n        props.value(textInput)\n        setShowError(false)\n      } else {\n        setShowError(true)\n      }\n        \n        \n    }\n\n\n    return (\n      \n      <div className='container'>\n        <div>\n        <input\n          className='formInput'\n          type=\"text\"\n          placeholder={props.join? \"Enter Session ID\" : \"Enter Name\"}\n          value={textInput}\n          onChange={(e) => setTextInput(e.target.value)}\n        />\n        {showError&&\n          <p>Please enter a valid {props.join? \"session id\" : \"name\"}</p>\n        }\n\n        <Button onClick={save}>\n          {props.join?\n            \"Join Session\" : \"Save\"\n          }\n          \n        </Button>\n        </div>\n      </div>\n        \n    );\n}\n\nexport default Form","/Users/rrahate/Code/bingodaddy/src/components/atoms/cardcell.js",["241","242","243","244"],[],"import { useState, useEffect, useCallback, Children } from 'react';\nimport styled from '@emotion/styled'\nimport { useParams} from 'react-router-dom';\nimport \"../atoms/cardcell.css\"\n\nconst Cell = styled.div`\n    text-align: center; \n    width: 80px;\n    height: 50px;\n    display: flex;\n    justify-content: center;\n    padding: 35px;\n    align-items: center;\n    border: 2px solid #272343;\n    border-radius: 10px;\n    margin: 20px 10px;\n    cursor: ${props => (props.title ? 'default ' : 'pointer')};\n    color: ${props => (props.title ? '#fff' : '#001e1d')};\n\n    &:hover {\n        background-color: ${props => (props.title ? 'none' : props.active ? 'none' : props.misClick ? 'red' : '#fde8c8')};\n        // -webkit-box-shadow: ${props => (props.title ? 'none' : props.active ? 'none' : props.misClick ? 'none' : ' inset -9px -8px 5px -4px rgba(0,0,0,1)')}; \n        // -moz-box-shadow: ${props => (props.title ? 'none' : props.active ? 'none' : props.misClick ? 'none' : ' inset -9px -8px 5px -4px rgba(0,0,0,1)')}; \n        // box-shadow: ${props => (props.title ? 'none' : props.active ? 'none' : props.misClick ? 'none' : ' inset -9px -8px 5px -4px rgba(0,0,0,1)')}; \n    }\n\n    \n    \n    background-color: ${props => (props.title ? '#000' : props.active ? '#5b6a62' : '#fff')}; //#f9bc60\n    background-color: ${props => (props.misClick ? 'red' : \"auto\")};\n    animation: ${props => (props.misClick && \"horizontal-shaking 0.3s\")};\n    animation-iteration-count: 3;\n\n`\nconst CardCell = (props) => {\n    const [active, setActive] = useState(props.active)\n    const [misClick, setMisClick] = useState(false)\n    let { gameid } = useParams();\n    \n\n\n\n    function cellClicked(item,cardnumber) {\n        \n        if(props.calls.includes(item) || item == \"FREE\") {\n            props.cellClick(item, cardnumber)\n            setActive(!active)\n        } else {\n            setMisClick(true)\n        }\n        \n    }\n\n    useEffect(() => {\n        setTimeout(() => {\n          setMisClick(false);\n        }, 900)\n      },);\n\n\n    return (\n        \n    \n            <Cell\n                onClick={() => cellClicked(props.item, props.cardnumber)} \n                title={props.title}\n                active={active} \n                misClick={misClick}\n            >\n                {props.children}\n            </Cell>\n     \n    )\n\n}\n\nexport default CardCell","/Users/rrahate/Code/bingodaddy/src/components/molecules/modal/modalVerify.js",["245","246","247","248"],[],"import { useState, useEffect } from 'react';\nimport styled from '@emotion/styled'\nimport { ReturnCardData } from '../../utilities';\nimport { useParams } from 'react-router-dom';\nimport { DB } from '../../../firebaseConfig/firebaseConfig.js'\nimport { doc, getDoc } from \"firebase/firestore\"; \nimport BingoCard from '../bingoCard';\n\n\n\nfunction ModalVerify(props) {\n\n    const H3 = styled.h3`\n        text-align: center;\n        font-size: 2em;\n        text-transform: uppercase;\n        margin-bottom: 0;\n    `\n\n    const[playerCards, setPlayerCards] = useState([])\n    const[calledArray, setCalledArray] = useState([])\n    let { gameid } = useParams();\n    const callsRef = doc(DB, \"sessions\", gameid)\n\n    async function GetCalls() {\n            \n        const callsSnap = await getDoc(callsRef);\n        \n        if (callsSnap.exists()) {\n          const x = callsSnap.data()\n          setCalledArray(x.calls)\n          \n        } \n      }\n      \n    \n    \n    async function getCards(x, y) {\n        \n        const A = await ReturnCardData(DB, x, gameid)\n        \n        if(A !== null) {\n          // PLAYER HAS CARDS\n          \n          setPlayerCards((playerCards) => [...playerCards, \n            {   name: y,\n                cards: A.sessionCards\n            }\n        \n        ])\n        \n        } else {\n            console.log(\"nothing\")\n        }\n\n    } // END GETCARDS\n\n    useEffect(() => {\n       \n        if(Object.keys(props.calledList).length != 0) {\n            props.calledList.forEach(item => \n                    getCards(item.playerID, item.playerName) \n            )\n\n            GetCalls();\n        }\n       \n    },[props.calledList])\n\n    useEffect(() => {\n        console.log(playerCards)\n        console.log(props.calledList)\n    },[playerCards])\n\n    \n    return (\n\n        <>\n            {(Object.keys(playerCards).length !== 0)&&\n                playerCards.map((item, index) => \n                    <>\n                        <H3>{item.name}</H3>\n                        <BingoCard cardsData={item.cards} />\n                    </>\n\n                )\n            \n            }\n        </>\n       \n    )\n\n        \n}\n\nexport default ModalVerify","/Users/rrahate/Code/bingodaddy/src/components/molecules/playerList.js",["249","250","251","252","253","254"],[],"import { useState, useEffect } from 'react';\nimport styled from '@emotion/styled'\nimport '../../App.css';\nimport Modal from './modal/modal.js';\n\nfunction PlayerList (props) {\n\n    const Pill = styled.div`\n        padding: 2px 10px;\n        display: inline-block;\n        background-color: #002e2c;\n        font-size: 0.9em;\n        text-align: center;\n        border-radius: 5px;\n        color: #eee;\n    `\n\n\n    return(\n        <div className='right-rail-container'>\n            <h3 className=\"rr-h2s\">Players <div className='pill'>{props.playerList.length}</div></h3>\n                \n            {(props.playerList.length !== 0)&&\n                props.playerList.map((item, index) => \n                                        \n                    <div key={\"players\" + `${index}` + `${item}`}>{item.playerName}</div>\n\n                )\n            \n            }\n        </div>\n    )\n\n}\n\nexport default PlayerList","/Users/rrahate/Code/bingodaddy/src/components/molecules/bingoCalled.js",["255","256","257","258"],[],"import { useState, useEffect } from 'react';\nimport styled from '@emotion/styled'\nimport bgwin from '../../imgs/win-bg.gif'\n\nfunction BingoCalled(props) {\n    const Banner = styled.div`\n        width: 100%;\n        height: 100px;\n        font-size: 1em;\n        justify-content: center;\n        background-image: url(${bgwin});\n        background-repeat: no-repeat;\n        background-position: center;\n        background-size: 200%;\n        color: #000;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        text-align: center;\n        border-radius: 10px;\n        \n    `\n    \n    const Bingo = styled.div`\n        color: #000;\n        font-weight: 700;\n        font-size: 1.5em;\n        padding: 5px 10px;\n        border-radius: 30px;\n        \n        background-color: #fff;;\n        display: inline-block;\n    `\n\n    const Pills = styled.div`\n        color: #fff;\n        font-weight: 400;\n        font-size: 0.7em;\n        margin-top: 5px;\n        padding: 5px 10px;\n        border-radius: 30px;\n        background-color: #000;\n        display: inline-block;\n    `\n    const PillsCont = styled.div`\n        display: flex;\n        flex-direction: row;\n        justify-content: space-around;\n    `\n    \n\n    function review() {\n        props.verify();   \n    }\n\n\n\n    return(\n        <>\n\n        <Banner>\n            <Bingo>Bingo!</Bingo>\n            <PillsCont>\n            {(props.list.length !== 0)&&\n                    \n                props.list.map((item, index) => \n                                        \n                    <Pills key={\"bingo\" + `${index}` + `${item}`} onClick={review}>\n                        {item.playerName}\n                    </Pills>\n\n                )\n                \n            }\n            </PillsCont>\n        </Banner>\n\n        </>\n        \n    )\n}\n\nexport default BingoCalled\n","/Users/rrahate/Code/bingodaddy/src/components/atoms/button.js",["259"],[],"import { useState } from 'react';\nimport styled from '@emotion/styled'\n\nconst Btn = styled.div`\n    text-align: center; \n    border-radius: 10px;\n    font-weight: 400;\n    border-radius: 10px;\n    padding: 20px;\n    cursor: pointer;\n    background-color: ${props => (props.secondary ? '#093035' : '#001e1d')};\n    color: #fff;\n    cursor: pointer;\n\n    &:hover {\n\n        background-color: ${props => (props.secondary ? '#000' : '#000')};\n    }\n\n    & > svg {\n        font-size: 2em;\n        margin-bottom: 10px; \n    }\n\n    \n\n\n`\nconst Button = (props) => {\n    \n    return (\n        <Btn secondary={props.secondary} tertiary={props.tertiary} onClick={props.onClick}>\n            {props.children}\n        </Btn>\n    )\n\n}\n\nexport default Button","/Users/rrahate/Code/bingodaddy/src/pages/gameEnd.js",["260","261","262"],[],"import { useState, useEffect } from 'react';\nimport { DB }  from \"../firebaseConfig/firebaseConfig.js\"\nimport styled from '@emotion/styled'\nimport Button from '../components/atoms/button';\nimport { ReturnPlayerDB } from '../components/utilities.js';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\nimport { doc, updateDoc} from \"firebase/firestore\"; \n\nconst BG = styled.div`\n    background-color: #222;\n    color: #fff;\n    width: 100%;\n    height: 100%;\n    overflow: scroll;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    padding: 5%;\n`\nconst ButtonContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    font-size: 0.4em;\n    margin-top: -80px;\n     & > div {\n        margin-right: 20px;\n     }\n`\nconst Content = styled.div`\n    font-size: 5em;\n    text-align: center;\n`\n\nfunction GameEnd() {\n    \n    let { gameid } = useParams();\n    const navigate = useNavigate();\n    const location = useLocation();\n    const [admin, setAdmin] = useState(false)\n\n    useEffect(() => {\n        console.log(gameid)\n        const x = location.state.playerID\n        const y = location.state.admin\n\n        console.log(y)\n        if(x == y) {\n            setAdmin(true)\n        }\n        \n    },[])\n\n    async function restart() {\n\n       // For Every Player who decides to join back clear the cards\n       \n       const A = await ReturnPlayerDB(DB, location.state.admin)\n\n       if (A != null) {\n        \n        // Admin in Player DB\n\n            const docData= {\n            sessionID: gameid,\n            admin: location.state.admin,\n            sessionEnd: false, \n            players: [\n                {\n                playerName: A.playerName,\n                playerID: A.playerID,\n                }\n            ],\n            calls:[],\n            bingo:[],\n            calledNumber: 0\n\n            } \n            \n            const sessionRef = doc(DB, \"sessions\", gameid) \n            const setGameStop = await updateDoc(sessionRef, docData); \n            navigate('/'+ gameid)\n        }\n          \n          \n          \n\n    }\n\n    return (\n        <BG>\n            <Content>\n                <h1>Game Over</h1>\n                {admin ?\n                    <ButtonContainer>\n                        <Button onClick={restart}>Restart Game</Button>\n                        <Button onClick={() => navigate('/')}>BinGoDaddy Home</Button>\n                    </ButtonContainer>\n                    :\n                    <div>\n                        <ButtonContainer>\n                            You will be able to join the room, when the admin restarts the game\n                            \n                        </ButtonContainer>\n                    </div>\n                }\n            </Content>\n        </BG>\n    )\n}\n\nexport default GameEnd\n","/Users/rrahate/Code/bingodaddy/src/components/molecules/players.js",["263","264","265","266","267","268","269","270","271"],[],"import { useState, useEffect } from 'react';\nimport styled from '@emotion/styled'\nimport { doc, setDoc, getDoc, updateDoc, onSnapshot, arrayUnion } from \"firebase/firestore\"; \nimport { DB } from \"../../firebaseConfig/firebaseConfig.js\"\n\nfunction Players(props) {\n\n    useEffect(()=> {\n\n        console.log(\"Test COmp\")\n    },[])\n\n    return(\n        <div>\n            Player\n        </div>\n    )\n}\n\nexport default Players",{"ruleId":"272","severity":1,"message":"273","line":1,"column":10,"nodeType":"274","messageId":"275","endLine":1,"endColumn":18},{"ruleId":"272","severity":1,"message":"276","line":1,"column":20,"nodeType":"274","messageId":"275","endLine":1,"endColumn":29},{"ruleId":"272","severity":1,"message":"277","line":2,"column":10,"nodeType":"274","messageId":"275","endLine":2,"endColumn":17},{"ruleId":"272","severity":1,"message":"278","line":2,"column":19,"nodeType":"274","messageId":"275","endLine":2,"endColumn":23},{"ruleId":"272","severity":1,"message":"279","line":3,"column":8,"nodeType":"274","messageId":"275","endLine":3,"endColumn":12},{"ruleId":"272","severity":1,"message":"280","line":6,"column":3,"nodeType":"274","messageId":"275","endLine":6,"endColumn":22},{"ruleId":"272","severity":1,"message":"281","line":14,"column":8,"nodeType":"274","messageId":"275","endLine":14,"endColumn":12},{"ruleId":"272","severity":1,"message":"282","line":8,"column":58,"nodeType":"274","messageId":"275","endLine":8,"endColumn":68},{"ruleId":"272","severity":1,"message":"283","line":45,"column":23,"nodeType":"274","messageId":"275","endLine":45,"endColumn":35},{"ruleId":"272","severity":1,"message":"284","line":47,"column":12,"nodeType":"274","messageId":"275","endLine":47,"endColumn":22},{"ruleId":"272","severity":1,"message":"285","line":47,"column":24,"nodeType":"274","messageId":"275","endLine":47,"endColumn":37},{"ruleId":"272","severity":1,"message":"286","line":148,"column":15,"nodeType":"274","messageId":"275","endLine":148,"endColumn":22},{"ruleId":"272","severity":1,"message":"287","line":192,"column":19,"nodeType":"274","messageId":"275","endLine":192,"endColumn":33},{"ruleId":"272","severity":1,"message":"288","line":193,"column":19,"nodeType":"274","messageId":"275","endLine":193,"endColumn":32},{"ruleId":"289","severity":1,"message":"290","line":201,"column":9,"nodeType":"291","endLine":201,"endColumn":21,"suggestions":"292"},{"ruleId":"272","severity":1,"message":"293","line":11,"column":31,"nodeType":"274","messageId":"275","endLine":11,"endColumn":41},{"ruleId":"272","severity":1,"message":"294","line":11,"column":66,"nodeType":"274","messageId":"275","endLine":11,"endColumn":73},{"ruleId":"272","severity":1,"message":"295","line":11,"column":87,"nodeType":"274","messageId":"275","endLine":11,"endColumn":98},{"ruleId":"272","severity":1,"message":"296","line":11,"column":100,"nodeType":"274","messageId":"275","endLine":11,"endColumn":110},{"ruleId":"272","severity":1,"message":"297","line":16,"column":8,"nodeType":"274","messageId":"275","endLine":16,"endColumn":15},{"ruleId":"272","severity":1,"message":"298","line":31,"column":19,"nodeType":"274","messageId":"275","endLine":31,"endColumn":27},{"ruleId":"272","severity":1,"message":"299","line":60,"column":17,"nodeType":"274","messageId":"275","endLine":60,"endColumn":21},{"ruleId":"289","severity":1,"message":"300","line":70,"column":7,"nodeType":"291","endLine":70,"endColumn":9,"suggestions":"301"},{"ruleId":"289","severity":1,"message":"302","line":82,"column":7,"nodeType":"291","endLine":82,"endColumn":16,"suggestions":"303"},{"ruleId":"272","severity":1,"message":"304","line":87,"column":13,"nodeType":"274","messageId":"275","endLine":87,"endColumn":24},{"ruleId":"272","severity":1,"message":"305","line":184,"column":21,"nodeType":"274","messageId":"275","endLine":184,"endColumn":31},{"ruleId":"289","severity":1,"message":"300","line":227,"column":9,"nodeType":"291","endLine":227,"endColumn":31,"suggestions":"306"},{"ruleId":"272","severity":1,"message":"307","line":248,"column":21,"nodeType":"274","messageId":"275","endLine":248,"endColumn":34},{"ruleId":"272","severity":1,"message":"308","line":250,"column":21,"nodeType":"274","messageId":"275","endLine":250,"endColumn":32},{"ruleId":"289","severity":1,"message":"309","line":260,"column":9,"nodeType":"291","endLine":260,"endColumn":21,"suggestions":"310"},{"ruleId":"311","severity":1,"message":"312","line":287,"column":73,"nodeType":"313","messageId":"314","endLine":287,"endColumn":75},{"ruleId":"311","severity":1,"message":"312","line":298,"column":41,"nodeType":"313","messageId":"314","endLine":298,"endColumn":43},{"ruleId":"272","severity":1,"message":"315","line":308,"column":21,"nodeType":"274","messageId":"275","endLine":308,"endColumn":35},{"ruleId":"272","severity":1,"message":"316","line":341,"column":19,"nodeType":"274","messageId":"275","endLine":341,"endColumn":34},{"ruleId":"272","severity":1,"message":"317","line":1,"column":31,"nodeType":"274","messageId":"275","endLine":1,"endColumn":38},{"ruleId":"272","severity":1,"message":"318","line":4,"column":21,"nodeType":"274","messageId":"275","endLine":4,"endColumn":32},{"ruleId":"272","severity":1,"message":"293","line":8,"column":31,"nodeType":"274","messageId":"275","endLine":8,"endColumn":41},{"ruleId":"272","severity":1,"message":"294","line":8,"column":66,"nodeType":"274","messageId":"275","endLine":8,"endColumn":73},{"ruleId":"272","severity":1,"message":"295","line":8,"column":87,"nodeType":"274","messageId":"275","endLine":8,"endColumn":98},{"ruleId":"272","severity":1,"message":"296","line":8,"column":100,"nodeType":"274","messageId":"275","endLine":8,"endColumn":110},{"ruleId":"272","severity":1,"message":"319","line":40,"column":11,"nodeType":"274","messageId":"275","endLine":40,"endColumn":20},{"ruleId":"272","severity":1,"message":"320","line":48,"column":12,"nodeType":"274","messageId":"275","endLine":48,"endColumn":19},{"ruleId":"272","severity":1,"message":"321","line":48,"column":21,"nodeType":"274","messageId":"275","endLine":48,"endColumn":31},{"ruleId":"289","severity":1,"message":"322","line":61,"column":7,"nodeType":"291","endLine":61,"endColumn":20,"suggestions":"323"},{"ruleId":"289","severity":1,"message":"324","line":88,"column":7,"nodeType":"291","endLine":88,"endColumn":9,"suggestions":"325"},{"ruleId":"272","severity":1,"message":"326","line":90,"column":14,"nodeType":"274","messageId":"275","endLine":90,"endColumn":25},{"ruleId":"311","severity":1,"message":"312","line":99,"column":18,"nodeType":"313","messageId":"314","endLine":99,"endColumn":20},{"ruleId":"311","severity":1,"message":"312","line":110,"column":13,"nodeType":"313","messageId":"314","endLine":110,"endColumn":15},{"ruleId":"272","severity":1,"message":"327","line":129,"column":19,"nodeType":"274","messageId":"275","endLine":129,"endColumn":31},{"ruleId":"272","severity":1,"message":"328","line":133,"column":19,"nodeType":"274","messageId":"275","endLine":133,"endColumn":32},{"ruleId":"289","severity":1,"message":"324","line":168,"column":9,"nodeType":"291","endLine":168,"endColumn":43,"suggestions":"329"},{"ruleId":"272","severity":1,"message":"327","line":190,"column":15,"nodeType":"274","messageId":"275","endLine":190,"endColumn":27},{"ruleId":"289","severity":1,"message":"330","line":212,"column":7,"nodeType":"291","endLine":212,"endColumn":17,"suggestions":"331"},{"ruleId":"332","severity":1,"message":"333","line":238,"column":35,"nodeType":"313","messageId":"334","endLine":238,"endColumn":36},{"ruleId":"332","severity":1,"message":"333","line":240,"column":39,"nodeType":"313","messageId":"334","endLine":240,"endColumn":40},{"ruleId":"332","severity":1,"message":"333","line":244,"column":38,"nodeType":"313","messageId":"334","endLine":244,"endColumn":39},{"ruleId":"332","severity":1,"message":"333","line":244,"column":51,"nodeType":"313","messageId":"334","endLine":244,"endColumn":52},{"ruleId":"332","severity":1,"message":"333","line":244,"column":64,"nodeType":"313","messageId":"334","endLine":244,"endColumn":65},{"ruleId":"332","severity":1,"message":"333","line":258,"column":39,"nodeType":"313","messageId":"334","endLine":258,"endColumn":40},{"ruleId":"332","severity":1,"message":"333","line":262,"column":42,"nodeType":"313","messageId":"334","endLine":262,"endColumn":43},{"ruleId":"332","severity":1,"message":"333","line":262,"column":55,"nodeType":"313","messageId":"334","endLine":262,"endColumn":56},{"ruleId":"332","severity":1,"message":"333","line":262,"column":69,"nodeType":"313","messageId":"334","endLine":262,"endColumn":70},{"ruleId":"332","severity":1,"message":"333","line":275,"column":39,"nodeType":"313","messageId":"334","endLine":275,"endColumn":40},{"ruleId":"332","severity":1,"message":"333","line":279,"column":42,"nodeType":"313","messageId":"334","endLine":279,"endColumn":43},{"ruleId":"332","severity":1,"message":"333","line":279,"column":55,"nodeType":"313","messageId":"334","endLine":279,"endColumn":56},{"ruleId":"332","severity":1,"message":"333","line":279,"column":69,"nodeType":"313","messageId":"334","endLine":279,"endColumn":70},{"ruleId":"311","severity":1,"message":"312","line":286,"column":39,"nodeType":"313","messageId":"314","endLine":286,"endColumn":41},{"ruleId":"332","severity":1,"message":"333","line":292,"column":39,"nodeType":"313","messageId":"334","endLine":292,"endColumn":40},{"ruleId":"332","severity":1,"message":"333","line":296,"column":38,"nodeType":"313","messageId":"334","endLine":296,"endColumn":39},{"ruleId":"332","severity":1,"message":"333","line":296,"column":51,"nodeType":"313","messageId":"334","endLine":296,"endColumn":52},{"ruleId":"332","severity":1,"message":"333","line":296,"column":65,"nodeType":"313","messageId":"334","endLine":296,"endColumn":66},{"ruleId":"332","severity":1,"message":"333","line":309,"column":39,"nodeType":"313","messageId":"334","endLine":309,"endColumn":40},{"ruleId":"332","severity":1,"message":"333","line":313,"column":38,"nodeType":"313","messageId":"334","endLine":313,"endColumn":39},{"ruleId":"332","severity":1,"message":"333","line":313,"column":51,"nodeType":"313","messageId":"334","endLine":313,"endColumn":52},{"ruleId":"332","severity":1,"message":"333","line":313,"column":65,"nodeType":"313","messageId":"334","endLine":313,"endColumn":66},{"ruleId":"272","severity":1,"message":"335","line":2,"column":8,"nodeType":"274","messageId":"275","endLine":2,"endColumn":14},{"ruleId":"272","severity":1,"message":"336","line":3,"column":15,"nodeType":"274","messageId":"275","endLine":3,"endColumn":21},{"ruleId":"272","severity":1,"message":"337","line":3,"column":23,"nodeType":"274","messageId":"275","endLine":3,"endColumn":29},{"ruleId":"272","severity":1,"message":"338","line":6,"column":8,"nodeType":"274","messageId":"275","endLine":6,"endColumn":14},{"ruleId":"272","severity":1,"message":"339","line":15,"column":12,"nodeType":"274","messageId":"275","endLine":15,"endColumn":24},{"ruleId":"272","severity":1,"message":"340","line":15,"column":26,"nodeType":"274","messageId":"275","endLine":15,"endColumn":41},{"ruleId":"311","severity":1,"message":"312","line":39,"column":31,"nodeType":"313","messageId":"314","endLine":39,"endColumn":33},{"ruleId":"289","severity":1,"message":"341","line":42,"column":7,"nodeType":"291","endLine":42,"endColumn":20,"suggestions":"342"},{"ruleId":"272","severity":1,"message":"305","line":54,"column":23,"nodeType":"274","messageId":"275","endLine":54,"endColumn":33},{"ruleId":"272","severity":1,"message":"343","line":58,"column":23,"nodeType":"274","messageId":"275","endLine":58,"endColumn":38},{"ruleId":"289","severity":1,"message":"344","line":67,"column":7,"nodeType":"291","endLine":67,"endColumn":23,"suggestions":"345"},{"ruleId":"289","severity":1,"message":"346","line":78,"column":7,"nodeType":"291","endLine":78,"endColumn":9,"suggestions":"347"},{"ruleId":"311","severity":1,"message":"348","line":122,"column":51,"nodeType":"313","messageId":"314","endLine":122,"endColumn":53},{"ruleId":"311","severity":1,"message":"312","line":130,"column":47,"nodeType":"313","messageId":"314","endLine":130,"endColumn":49},{"ruleId":"349","severity":1,"message":"350","line":140,"column":21,"nodeType":"351","endLine":140,"endColumn":52},{"ruleId":"349","severity":1,"message":"350","line":146,"column":21,"nodeType":"351","endLine":146,"endColumn":56},{"ruleId":"272","severity":1,"message":"273","line":1,"column":10,"nodeType":"274","messageId":"275","endLine":1,"endColumn":18},{"ruleId":"272","severity":1,"message":"276","line":1,"column":20,"nodeType":"274","messageId":"275","endLine":1,"endColumn":29},{"ruleId":"272","severity":1,"message":"273","line":1,"column":10,"nodeType":"274","messageId":"275","endLine":1,"endColumn":18},{"ruleId":"332","severity":1,"message":"333","line":56,"column":53,"nodeType":"313","messageId":"334","endLine":56,"endColumn":54},{"ruleId":"332","severity":1,"message":"333","line":56,"column":66,"nodeType":"313","messageId":"334","endLine":56,"endColumn":67},{"ruleId":"332","severity":1,"message":"333","line":68,"column":53,"nodeType":"313","messageId":"334","endLine":68,"endColumn":54},{"ruleId":"332","severity":1,"message":"333","line":68,"column":66,"nodeType":"313","messageId":"334","endLine":68,"endColumn":67},{"ruleId":"332","severity":1,"message":"333","line":80,"column":53,"nodeType":"313","messageId":"334","endLine":80,"endColumn":54},{"ruleId":"332","severity":1,"message":"333","line":80,"column":66,"nodeType":"313","messageId":"334","endLine":80,"endColumn":67},{"ruleId":"332","severity":1,"message":"333","line":92,"column":53,"nodeType":"313","messageId":"334","endLine":92,"endColumn":54},{"ruleId":"332","severity":1,"message":"333","line":92,"column":66,"nodeType":"313","messageId":"334","endLine":92,"endColumn":67},{"ruleId":"332","severity":1,"message":"333","line":104,"column":53,"nodeType":"313","messageId":"334","endLine":104,"endColumn":54},{"ruleId":"332","severity":1,"message":"333","line":104,"column":66,"nodeType":"313","messageId":"334","endLine":104,"endColumn":67},{"ruleId":"272","severity":1,"message":"273","line":1,"column":10,"nodeType":"274","messageId":"275","endLine":1,"endColumn":18},{"ruleId":"272","severity":1,"message":"352","line":1,"column":20,"nodeType":"274","messageId":"275","endLine":1,"endColumn":26},{"ruleId":"272","severity":1,"message":"336","line":1,"column":15,"nodeType":"274","messageId":"275","endLine":1,"endColumn":21},{"ruleId":"272","severity":1,"message":"293","line":1,"column":31,"nodeType":"274","messageId":"275","endLine":1,"endColumn":41},{"ruleId":"272","severity":1,"message":"353","line":1,"column":43,"nodeType":"274","messageId":"275","endLine":1,"endColumn":52},{"ruleId":"272","severity":1,"message":"354","line":1,"column":54,"nodeType":"274","messageId":"275","endLine":1,"endColumn":64},{"ruleId":"272","severity":1,"message":"294","line":1,"column":66,"nodeType":"274","messageId":"275","endLine":1,"endColumn":73},{"ruleId":"272","severity":1,"message":"282","line":1,"column":75,"nodeType":"274","messageId":"275","endLine":1,"endColumn":85},{"ruleId":"272","severity":1,"message":"352","line":1,"column":20,"nodeType":"274","messageId":"275","endLine":1,"endColumn":26},{"ruleId":"272","severity":1,"message":"276","line":1,"column":28,"nodeType":"274","messageId":"275","endLine":1,"endColumn":37},{"ruleId":"272","severity":1,"message":"355","line":1,"column":39,"nodeType":"274","messageId":"275","endLine":1,"endColumn":50},{"ruleId":"272","severity":1,"message":"356","line":11,"column":9,"nodeType":"274","messageId":"275","endLine":11,"endColumn":18},{"ruleId":"272","severity":1,"message":"355","line":1,"column":31,"nodeType":"274","messageId":"275","endLine":1,"endColumn":42},{"ruleId":"272","severity":1,"message":"357","line":1,"column":44,"nodeType":"274","messageId":"275","endLine":1,"endColumn":52},{"ruleId":"272","severity":1,"message":"358","line":38,"column":11,"nodeType":"274","messageId":"275","endLine":38,"endColumn":17},{"ruleId":"311","severity":1,"message":"312","line":45,"column":47,"nodeType":"313","messageId":"314","endLine":45,"endColumn":49},{"ruleId":"272","severity":1,"message":"359","line":21,"column":11,"nodeType":"274","messageId":"275","endLine":21,"endColumn":22},{"ruleId":"311","severity":1,"message":"348","line":60,"column":49,"nodeType":"313","messageId":"314","endLine":60,"endColumn":51},{"ruleId":"289","severity":1,"message":"360","line":68,"column":7,"nodeType":"291","endLine":68,"endColumn":25,"suggestions":"361"},{"ruleId":"289","severity":1,"message":"362","line":73,"column":7,"nodeType":"291","endLine":73,"endColumn":20,"suggestions":"363"},{"ruleId":"272","severity":1,"message":"273","line":1,"column":10,"nodeType":"274","messageId":"275","endLine":1,"endColumn":18},{"ruleId":"272","severity":1,"message":"276","line":1,"column":20,"nodeType":"274","messageId":"275","endLine":1,"endColumn":29},{"ruleId":"272","severity":1,"message":"364","line":4,"column":8,"nodeType":"274","messageId":"275","endLine":4,"endColumn":13},{"ruleId":"272","severity":1,"message":"365","line":8,"column":11,"nodeType":"274","messageId":"275","endLine":8,"endColumn":15},{"ruleId":"332","severity":1,"message":"333","line":26,"column":41,"nodeType":"313","messageId":"334","endLine":26,"endColumn":42},{"ruleId":"332","severity":1,"message":"333","line":26,"column":54,"nodeType":"313","messageId":"334","endLine":26,"endColumn":55},{"ruleId":"272","severity":1,"message":"273","line":1,"column":10,"nodeType":"274","messageId":"275","endLine":1,"endColumn":18},{"ruleId":"272","severity":1,"message":"276","line":1,"column":20,"nodeType":"274","messageId":"275","endLine":1,"endColumn":29},{"ruleId":"332","severity":1,"message":"333","line":68,"column":41,"nodeType":"313","messageId":"334","endLine":68,"endColumn":42},{"ruleId":"332","severity":1,"message":"333","line":68,"column":54,"nodeType":"313","messageId":"334","endLine":68,"endColumn":55},{"ruleId":"272","severity":1,"message":"273","line":1,"column":10,"nodeType":"274","messageId":"275","endLine":1,"endColumn":18},{"ruleId":"311","severity":1,"message":"312","line":49,"column":14,"nodeType":"313","messageId":"314","endLine":49,"endColumn":16},{"ruleId":"289","severity":1,"message":"366","line":53,"column":7,"nodeType":"291","endLine":53,"endColumn":9,"suggestions":"367"},{"ruleId":"272","severity":1,"message":"304","line":82,"column":19,"nodeType":"274","messageId":"275","endLine":82,"endColumn":30},{"ruleId":"272","severity":1,"message":"273","line":1,"column":10,"nodeType":"274","messageId":"275","endLine":1,"endColumn":18},{"ruleId":"272","severity":1,"message":"335","line":2,"column":8,"nodeType":"274","messageId":"275","endLine":2,"endColumn":14},{"ruleId":"272","severity":1,"message":"368","line":3,"column":10,"nodeType":"274","messageId":"275","endLine":3,"endColumn":13},{"ruleId":"272","severity":1,"message":"336","line":3,"column":15,"nodeType":"274","messageId":"275","endLine":3,"endColumn":21},{"ruleId":"272","severity":1,"message":"337","line":3,"column":23,"nodeType":"274","messageId":"275","endLine":3,"endColumn":29},{"ruleId":"272","severity":1,"message":"353","line":3,"column":31,"nodeType":"274","messageId":"275","endLine":3,"endColumn":40},{"ruleId":"272","severity":1,"message":"282","line":3,"column":42,"nodeType":"274","messageId":"275","endLine":3,"endColumn":52},{"ruleId":"272","severity":1,"message":"354","line":3,"column":54,"nodeType":"274","messageId":"275","endLine":3,"endColumn":64},{"ruleId":"272","severity":1,"message":"369","line":4,"column":10,"nodeType":"274","messageId":"275","endLine":4,"endColumn":12},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'FireApp' is defined but never used.","'Auth' is defined but never used.","'logo' is defined but never used.","'createBrowserRouter' is defined but never used.","'Form' is defined but never used.","'onSnapshot' is defined but never used.","'setSessionID' is assigned a value but never used.","'playerData' is assigned a value but never used.","'setPlayerData' is assigned a value but never used.","'docSnap' is assigned a value but never used.","'sessionDocSnap' is assigned a value but never used.","'playerDocSnap' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'adminID', 'join', 'navigate', and 'sessionID'. Either include them or remove the dependency array.","ArrayExpression",["370"],"'collection' is defined but never used.","'getDocs' is defined but never used.","'arrayRemove' is defined but never used.","'writeBatch' is defined but never used.","'Players' is defined but never used.","'setCards' is assigned a value but never used.","'play' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'gameid'. Either include it or remove the dependency array.",["371"],"React Hook useEffect has missing dependencies: 'adminID', 'gameid', 'navigate', 'playerID', and 'playerName'. Either include them or remove the dependency array.",["372"],"'setGameStop' is assigned a value but never used.","'writeArray' is assigned a value but never used.",["373"],"'setPlayerSnap' is assigned a value but never used.","'setGameSnap' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'CreateNewCard', 'gameid', 'newPlayer', and 'playerID'. Either include them or remove the dependency array.",["374"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'writeCardArray' is assigned a value but never used.","'writeBingoArray' is assigned a value but never used.","'useMemo' is defined but never used.","'useNavigate' is defined but never used.","'CardTitle' is assigned a value but never used.","'bCalled' is assigned a value but never used.","'setBCalled' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'GetClickedCells'. Either include it or remove the dependency array.",["375"],"React Hook useEffect has missing dependencies: 'gameid' and 'playerID'. Either include them or remove the dependency array.",["376"],"'bingoCalled' is defined but never used.","'setCardsSnap' is assigned a value but never used.","'setCardsSnap2' is assigned a value but never used.",["377"],"React Hook useEffect has a missing dependency: 'getCards'. Either include it or remove the dependency array.",["378"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'styled' is defined but never used.","'setDoc' is defined but never used.","'getDoc' is defined but never used.","'Button' is defined but never used.","'modalContent' is assigned a value but never used.","'setModalContent' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["379"],"'writeCallNumber' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'callsRef'. Either include it or remove the dependency array.",["380"],"React Hook useEffect has a missing dependency: 'props.gameid'. Either include it or remove the dependency array.",["381"],"Expected '!==' and instead saw '!='.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useRef' is defined but never used.","'updateDoc' is defined but never used.","'arrayUnion' is defined but never used.","'useCallback' is defined but never used.","'Container' is assigned a value but never used.","'Children' is defined but never used.","'gameid' is assigned a value but never used.","'calledArray' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'GetCalls' and 'getCards'. Either include them or remove the dependency array.",["382"],"React Hook useEffect has a missing dependency: 'props.calledList'. Either include it or remove the dependency array.",["383"],"'Modal' is defined but never used.","'Pill' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'gameid', 'location.state.admin', and 'location.state.playerID'. Either include them or remove the dependency array.",["384"],"'doc' is defined but never used.","'DB' is defined but never used.",{"desc":"385","fix":"386"},{"desc":"387","fix":"388"},{"desc":"389","fix":"390"},{"desc":"391","fix":"392"},{"desc":"393","fix":"394"},{"desc":"395","fix":"396"},{"desc":"397","fix":"398"},{"desc":"399","fix":"400"},{"desc":"401","fix":"402"},{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"desc":"407","fix":"408"},{"desc":"409","fix":"410"},{"desc":"411","fix":"412"},{"desc":"413","fix":"414"},"Update the dependencies array to be: [adminID, join, navigate, playerName, sessionID]",{"range":"415","text":"416"},"Update the dependencies array to be: [gameid]",{"range":"417","text":"418"},"Update the dependencies array to be: [adminID, gameEnd, gameid, navigate, playerID, playerName]",{"range":"419","text":"420"},"Update the dependencies array to be: [gameid, playerID, playerList]",{"range":"421","text":"422"},"Update the dependencies array to be: [CreateNewCard, gameid, newPlayer, playerID, playerName]",{"range":"423","text":"424"},"Update the dependencies array to be: [GetClickedCells, props.calls]",{"range":"425","text":"426"},"Update the dependencies array to be: [gameid, playerID]",{"range":"427","text":"428"},"Update the dependencies array to be: [gameid, newCardAdded, playerID, props.newCardAdded]",{"range":"429","text":"430"},"Update the dependencies array to be: [getCards, playerID]",{"range":"431","text":"432"},"Update the dependencies array to be: [calledArray, props]",{"range":"433","text":"434"},"Update the dependencies array to be: [calledNumberDB, callsRef]",{"range":"435","text":"436"},"Update the dependencies array to be: [props.gameid]",{"range":"437","text":"438"},"Update the dependencies array to be: [GetCalls, getCards, props.calledList]",{"range":"439","text":"440"},"Update the dependencies array to be: [playerCards, props.calledList]",{"range":"441","text":"442"},"Update the dependencies array to be: [gameid, location.state.admin, location.state.playerID]",{"range":"443","text":"444"},[4944,4956],"[adminID, join, navigate, playerName, sessionID]",[2756,2758],"[gameid]",[3024,3033],"[adminID, gameEnd, gameid, navigate, playerID, playerName]",[6981,7003],"[gameid, playerID, playerList]",[7937,7949],"[CreateNewCard, gameid, newPlayer, playerID, playerName]",[1751,1764],"[GetClickedCells, props.calls]",[2380,2382],"[gameid, playerID]",[4189,4223],"[gameid, newCardAdded, playerID, props.newCardAdded]",[5126,5136],"[getCards, playerID]",[1290,1303],"[calledArray, props]",[1805,1821],"[calledNumberDB, callsRef]",[2092,2094],"[props.gameid]",[1641,1659],"[GetCalls, getCards, props.calledList]",[1761,1774],"[playerCards, props.calledList]",[1306,1308],"[gameid, location.state.admin, location.state.playerID]"]