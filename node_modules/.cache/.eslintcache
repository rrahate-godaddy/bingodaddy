[{"/Users/rrahate/Code/bingodaddy/src/index.js":"1","/Users/rrahate/Code/bingodaddy/src/App.js":"2","/Users/rrahate/Code/bingodaddy/src/reportWebVitals.js":"3","/Users/rrahate/Code/bingodaddy/src/firebaseConfig/firebaseConfig.js":"4","/Users/rrahate/Code/bingodaddy/src/pages/home.js":"5","/Users/rrahate/Code/bingodaddy/src/pages/gameSession.js":"6","/Users/rrahate/Code/bingodaddy/src/pages/router/routerError.js":"7","/Users/rrahate/Code/bingodaddy/src/components/molecules/bingoCard.js":"8","/Users/rrahate/Code/bingodaddy/src/components/molecules/calls.js":"9","/Users/rrahate/Code/bingodaddy/src/components/molecules/modal/modal.js":"10","/Users/rrahate/Code/bingodaddy/src/components/molecules/modal/modalContent.js":"11","/Users/rrahate/Code/bingodaddy/src/components/molecules/modal/modalPlayerName.js":"12","/Users/rrahate/Code/bingodaddy/src/components/utilities.js":"13","/Users/rrahate/Code/bingodaddy/src/components/atoms/form.js":"14","/Users/rrahate/Code/bingodaddy/src/components/atoms/cardcell.js":"15","/Users/rrahate/Code/bingodaddy/src/components/molecules/modal/modalVerify.js":"16","/Users/rrahate/Code/bingodaddy/src/components/molecules/playerList.js":"17","/Users/rrahate/Code/bingodaddy/src/components/molecules/bingoCalled.js":"18","/Users/rrahate/Code/bingodaddy/src/components/atoms/button.js":"19","/Users/rrahate/Code/bingodaddy/src/pages/gameEnd.js":"20","/Users/rrahate/Code/bingodaddy/src/components/molecules/players.js":"21","/Users/rrahate/Code/bingodaddy/src/pages/confetti.js":"22","/Users/rrahate/Code/bingodaddy/src/components/molecules/gameLayout.js":"23","/Users/rrahate/Code/bingodaddy/src/components/molecules/bingoCardVerify.js":"24","/Users/rrahate/Code/bingodaddy/src/components/molecules/modal/modalRules.js":"25","/Users/rrahate/Code/bingodaddy/src/components/molecules/growl.js":"26"},{"size":498,"mtime":1678502317007,"results":"27","hashOfConfig":"28"},{"size":1303,"mtime":1683243745293,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1675109457687,"results":"30","hashOfConfig":"28"},{"size":638,"mtime":1677166745526,"results":"31","hashOfConfig":"28"},{"size":7442,"mtime":1683836034064,"results":"32","hashOfConfig":"28"},{"size":15413,"mtime":1683899779340,"results":"33","hashOfConfig":"28"},{"size":334,"mtime":1677326972124,"results":"34","hashOfConfig":"28"},{"size":10694,"mtime":1683278555831,"results":"35","hashOfConfig":"28"},{"size":4411,"mtime":1683731872445,"results":"36","hashOfConfig":"28"},{"size":2485,"mtime":1683746995864,"results":"37","hashOfConfig":"28"},{"size":4211,"mtime":1683282882149,"results":"38","hashOfConfig":"28"},{"size":673,"mtime":1683654966751,"results":"39","hashOfConfig":"28"},{"size":2435,"mtime":1683228722462,"results":"40","hashOfConfig":"28"},{"size":1582,"mtime":1683729323051,"results":"41","hashOfConfig":"28"},{"size":2549,"mtime":1683733274563,"results":"42","hashOfConfig":"28"},{"size":2432,"mtime":1683553415821,"results":"43","hashOfConfig":"28"},{"size":917,"mtime":1683279337780,"results":"44","hashOfConfig":"28"},{"size":2165,"mtime":1683553967081,"results":"45","hashOfConfig":"28"},{"size":1236,"mtime":1683734132358,"results":"46","hashOfConfig":"28"},{"size":4470,"mtime":1683849080645,"results":"47","hashOfConfig":"28"},{"size":421,"mtime":1680653723243,"results":"48","hashOfConfig":"28"},{"size":1967,"mtime":1683458333583,"results":"49","hashOfConfig":"28"},{"size":1129,"mtime":1683225366138,"results":"50","hashOfConfig":"28"},{"size":8571,"mtime":1683553042592,"results":"51","hashOfConfig":"28"},{"size":5671,"mtime":1683746965907,"results":"52","hashOfConfig":"28"},{"size":1628,"mtime":1683818547099,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"1pgllbk",{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"57"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":49,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},"/Users/rrahate/Code/bingodaddy/src/index.js",[],[],[],"/Users/rrahate/Code/bingodaddy/src/App.js",["155","156","157","158","159"],[],"import { useState, useEffect } from 'react';\nimport { FireApp, Auth }  from \"./firebaseConfig/firebaseConfig.js\"\nimport { ThemeProvider } from '@emotion/react';\nimport { theme } from './components/utilities.js';\nimport './App.css';\nimport {\n  createBrowserRouter,\n  createHashRouter,\n  RouterProvider,\n} from \"react-router-dom\";\nimport RouterError from './pages/router/routerError.js';\nimport Home from './pages/home.js';\nimport GameSession from './pages/gameSession.js';\nimport GameEnd from './pages/gameEnd.js';\nimport Form from './components/atoms/form.js';\nimport Fireworks from './pages/confetti.js';\n\n\nfunction App() {\n\n  const [themeSel, setThemeSel] = useState(theme.light)\n  useEffect(() => {\n    if(window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      setThemeSel(theme.dark)\n    }\n  },[])\n\n  const router = createHashRouter([\n    {\n      path: \"/\",\n      element: <Home />,\n      errorElement: <RouterError />,\n    },\n    {\n      path: \"/:gameid\",\n      element: <GameSession />,\n      errorElement: <RouterError />,\n    },\n    {\n      path: \"/:gameid/end\",\n      element: <GameEnd />,\n      errorElement: <RouterError />,\n    }\n  ]);\n \n  return (\n    <ThemeProvider theme={themeSel}>\n      <RouterProvider router={router} />\n    </ThemeProvider>\n  );\n  \n}\n\nexport default App;\n","/Users/rrahate/Code/bingodaddy/src/reportWebVitals.js",[],[],"/Users/rrahate/Code/bingodaddy/src/firebaseConfig/firebaseConfig.js",[],[],"/Users/rrahate/Code/bingodaddy/src/pages/home.js",["160","161","162","163","164","165","166","167","168","169","170"],[],"import { useState, useEffect } from 'react';\nimport { DB, Auth }  from \"../firebaseConfig/firebaseConfig.js\"\nimport { useTheme } from '@emotion/react';\nimport { nanoid } from 'nanoid';\nimport '../App.css';\nimport styled from '@emotion/styled'\nimport { signInAnonymously } from \"firebase/auth\";\nimport { onAuthStateChanged } from \"firebase/auth\"\nimport { doc, setDoc, collection, query, where, getDocs, onSnapshot } from \"firebase/firestore\"; \nimport { ReturnPlayerDB } from '../components/utilities.js';\nimport ModalPlayerName from '../components/molecules/modal/modalPlayerName.js';\nimport Button from '../components/atoms/button.js';\nimport { useNavigate } from 'react-router-dom';\nimport HomeImg from \"../imgs/home.jpg\"\nimport Logo from \"../imgs/logo.png\"\n\nfunction Home() {\n\n  // const theme = useTheme()\n  // const [darkMode, setDarkMode] = useState(true)\n\n  // useEffect(() =>  {\n  //   if(theme.scheme == 'dark') {\n  //     setDarkMode(true)\n  //   }\n  // },[])\n\n  const BG = styled.div`\n    background-color: #A6FFF8;\n    color: #111;\n    width: 100%;\n    height: 100%;\n    overflow: scroll;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: flex-start;\n\n    & > .logo {\n      width: 20px;\n    }\n  \n  `\n  const IMG = styled.div`\n    width: 50%;\n    height: 100vh;\n    overflow: hidden;\n    \n    & > img {\n      width: 100%;\n    }\n  `\n  \n  const ButtonContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    margin-top: -80px;\n\n    & > div {\n        margin-right: 20px;\n    }\n  `\n  const Content = styled.div` \n    text-align: left;\n    color: inherit;\n    width: 50%;\n    padding: 50px;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n\n    & > div {      \n      font-size: 1.2em;\n    }\n\n\n    & > .sm {\n      font-size: 1em;\n      color: #555;\n\n    }\n  `\n\n  const Desc = styled.div`\n    \n    width: 70%;\n    color: #555;\n\n    & > .title {\n      font-size: 2.5em;\n      line-height: 90%;\n      margin: 0 0 30px 0;\n      color: #111;\n      \n      \n\n      & > small {\n        font-weight: 300;\n      }\n    }\n  `\n\n\n    const [sessionID, setSessionID] = useState(nanoid(5))\n    const [recentSessions, setRecentSessions] = useState([])\n    const [playerData, setPlayerData] = useState([])\n    const [newPlayer, setNewPlayer] = useState(false)\n    const [join, setJoin] = useState(false)\n    const [playerName, setPlayerName] = useState(\"\")\n    const [adminID, setAdminID] = useState()\n    const navigate = useNavigate();\n\n    useEffect(() => {\n\n    \n        signInAnonymously(Auth)\n        .then(() => {\n          console.log(\"Signed In\")\n        })\n        .catch((error) => {\n          // Add Error Here\n        });\n    \n    \n        onAuthStateChanged(Auth, (user) => {\n          if (user) {\n            const uid = user.uid;\n            setAdminID(uid)\n          } else {\n            console.log(\"NOT\")\n          }\n        });\n    \n      });\n      \n\n      // Check if Admin has another session\n      useEffect(() => {\n      \n        if(adminID !== undefined) {\n            \n            const q = query(collection(DB, \"sessions\"), where(\"admin\", \"==\", adminID));\n            const newArray = []\n\n            const querySnapshot = async() => {\n                \n                const queryData = await getDocs(q);\n                \n                queryData.forEach((doc) => {\n                    const x = doc.data()\n                    newArray.push(x.sessionID)\n                });\n\n                setRecentSessions(newArray)\n\n            } \n\n\n            querySnapshot()\n            \n            \n              \n        }\n        \n      },[adminID])\n\n      useEffect(() => {\n        console.log(recentSessions)\n      },[recentSessions])\n\n      function joinSession() {\n        setJoin(true)\n      }\n\n      useEffect(() => {\n        if(join){\n          setNewPlayer(true)\n        }\n      },[join])\n\n      \n      async function createNewSession() {\n\n       const A = await ReturnPlayerDB(DB, adminID)\n\n       if (A != null) {\n        // Admin in Player DB\n\n        const docData= {\n          sessionID: sessionID,\n          sessionName: \"Test\",\n          admin: adminID,\n          sessionEnd: false, \n          players: [\n            {\n              playerName: A.playerName,\n              playerID: A.playerID,\n            }\n          ],\n          calls:[],\n          bingo:[],\n          calledNumber: 0\n\n        } \n        \n        const docRef = doc(DB, \"sessions\", sessionID) \n        const docSnap = await setDoc(docRef, docData);\n        navigate('/'+ sessionID)\n\n       } else {\n        // Admin Not in Player DB\n        setNewPlayer(true)\n\n       }\n\n      } // END CREATE SESSION\n\n      function recNameValue(x) {\n        setPlayerName(x)\n      }\n\n      function cancel() {\n        setNewPlayer(false)\n        setJoin(false)\n      }\n\n      useEffect(() => {\n        if(playerName.length !== 0 && !join) {\n          setNewPlayer(false)\n          const playerDocData= {\n            playerName: playerName,\n            playerID: adminID,\n          }\n\n          const sessionDocData= {\n            sessionID: sessionID,\n            sessionName: \"Test\",\n            admin: adminID,\n            sessionEnd: false, \n            players: [\n              {\n                playerName: playerName,\n                playerID: adminID\n              }\n            ],\n            calls:[],\n            bingo: [],\n            calledNumber: 0\n\n          } \n          \n          const sessionDocRef = doc(DB, \"sessions\", sessionID) \n          const playerDocRef = doc(DB, \"players\", adminID) \n          \n          async function AddNewPlayer() {\n            const sessionDocSnap = await setDoc(sessionDocRef, sessionDocData);\n            const playerDocSnap = await setDoc(playerDocRef, playerDocData);\n            navigate('/'+ sessionID)\n          }\n          \n          AddNewPlayer()\n        } else if(playerName.length !== 0 && join) {\n          navigate('/' + playerName)\n        }\n      },[playerName])\n\n  \n\n      return(\n        <BG>\n            <IMG>\n              <img src={HomeImg}  />\n            </IMG>\n            <Content>\n\n              <Desc>\n                {/* <p className='title'>Bin<b>GoDaddy</b></p>*/}\n\n                <p><img src={Logo} className=\"logo\" width=\"90%\" /></p>\n                A fun and engaging team building activity that is perfect for fostering a sense of unity and camaraderie within your group.\n              </Desc>\n\n              <ButtonContainer>\n                  <Button onClick={createNewSession}>Start a new game</Button>\n                  <Button secondary onClick={joinSession}>Join a game</Button>\n              </ButtonContainer>\n\n              <div className='sm'>made with ❤️ by DRIUX <br />🇺🇸 🇨🇦 🇰🇾 🇳🇱 🇰🇪</div>\n            </Content>\n\n            {/* {recentSessions&& \n                <>\n                    <h2>Ongoing sessions</h2>\n                    <ul>\n                    {recentSessions.map((session, index) =>  \n                            <li key={index}>{session}</li>  \n                    )}  \n                    </ul>    \n                    \n                </>\n            } */}\n\n            {newPlayer&& \n              <ModalPlayerName value={recNameValue} join={join} cancel={cancel} />\n            }          \n            \n            \n            \n        </BG>\n      );\n}\n\nexport default Home","/Users/rrahate/Code/bingodaddy/src/pages/gameSession.js",["171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192"],[],"/Users/rrahate/Code/bingodaddy/src/pages/router/routerError.js",[],[],"/Users/rrahate/Code/bingodaddy/src/components/molecules/bingoCard.js",["193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233"],[],"import { useState, useEffect, useMemo } from 'react';\nimport styled from '@emotion/styled'\nimport CardCell from '../atoms/cardcell';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { ReturnCardData, GenerateCard } from '../utilities';\nimport { DB, Auth }  from \"../../firebaseConfig/firebaseConfig.js\"\nimport { onAuthStateChanged } from \"firebase/auth\"\nimport { doc, setDoc, getDoc, collection, updateDoc, arrayUnion, getDocs, onSnapshot, arrayRemove, writeBatch } from \"firebase/firestore\"; \nimport { useTheme } from '@emotion/react';\n\nfunction BingoCard(props) {\n\n    const theme = useTheme();\n\n    const CardContainer = styled.div`\n        display: flex;\n        flex-direction: row;\n        height: 100%;\n        align-items: center;\n        overflow: scroll;\n        padding: 0 20px;\n\n        & > div {\n            margin: 10px 20px;\n            padding: 0 20px 20px 20px;\n            background-color: #fff;\n            border-radius: 20px;\n            -webkit-box-shadow: 0px 18px 22px -1px rgba(0,0,0,0.33); \n            box-shadow: 0px 18px 22px -1px rgba(0,0,0,0.33);\n        }\n    `\n    \n    const Card = styled.div`\n        display: flex;\n        flex-direction: column;\n        font-size: 1.5em;\n        justify-content: flex-start;\n\n        & > .cardNumber {\n            display: flex;\n            flex-direction: row;\n        }\n        \n    `\n    const CardCol = styled.div`\n        padding: 0;\n        margin: 0\n    `\n\n    const CardTitle = styled.div`\n\n        margin: 0 -20px 10px -20px; \n        padding: 20px;\n        background: #1966B3;\n        display: flex;\n        flex-direction: row;\n        border-radius: 20px 20px 0 0;\n        \n    `\n\n    const [bCalled, setBCalled] = useState(false)\n    const [cards, setCards] = useState([])\n    const [playerID, setPlayerID] = useState()\n    const [newCardAdded, setNewCardAdded] = useState(props.newCardAdded) \n    const [calledArray, setCalledArray] = useState([])\n    const [clickedCellArray, setClickedCellArray] = useState([])\n    let { gameid } = useParams();\n    \n\n    useEffect(() => {\n        setCalledArray(props.calls)\n        GetClickedCells()\n        console.log(\"Card Refresh\")\n    },[props.calls])\n\n    async function GetClickedCells() {\n        \n        const cardCellClickRef = doc(DB, \"players\", playerID, \"cardsCellClick\", gameid)\n        const cellSnap = await getDoc(cardCellClickRef);\n        \n        if (cellSnap.exists()) {\n          const x = cellSnap.data()\n          setClickedCellArray(x)\n          \n        } \n    }\n\n    useEffect(() => {\n\n        if(playerID) {\n\n        const unsub = onSnapshot(doc(DB, \"players\", playerID, \"cardsCellClick\", gameid), (doc) => {\n          const x = doc.data()\n          setClickedCellArray(x)\n        \n        });\n\n        return () => unsub();\n        }\n\n    },[])\n\n    function bingoCalled () {\n        props.bingoCalled(true)\n    }\n\n\n    function check(x) {\n       \n       const A = calledArray\n       if((A !== undefined) && (A !== null)) {\n            if(x == \"FREE\") {\n                return true\n            } else return A.includes(x)\n       }\n       \n       \n    }\n\n    function checkClicked(x, ind) {\n       const A = clickedCellArray\n       if(x == \"FREE\") return true\n       else if((A[ind] !== undefined) && (A[ind] !== null)) {\n            if(A[ind].includes(x)) return true\n            else return false\n       }\n    }\n\n    // Set Clicked Cells\n    async function cellClickDB(x,y) {\n        \n        const cardCellClickRef = doc(DB, \"players\", playerID, \"cardsCellClick\", gameid)\n\n        const newCardCellClick = { \n                [y]: arrayUnion(x)\n          }\n         \n        const cellSnap = await getDoc(cardCellClickRef);\n        \n        if (cellSnap.exists()) {\n            const setCardsSnap = await updateDoc(cardCellClickRef, newCardCellClick);\n\n        } else {\n            \n            const setCardsSnap2 = await setDoc(cardCellClickRef, newCardCellClick);\n        }\n\n    }\n\n    function cellClick(item,cardnumber) {\n\n        const isCalled = check(item)\n        if(isCalled) {\n            cellClickDB(item,cardnumber)\n        } else return false\n\n    }\n\n\n    useEffect(() => {\n        console.log(props.newCardAdded)\n    },[props.newCardAdded])\n\n\n    // ONCE NEW CARD IS ADDED GET IT FOR DB\n    useEffect(() => {\n\n        if(newCardAdded || props.newCardAdded) {\n          async function gettingNewCard() {\n            const A = await ReturnCardData(DB, playerID, gameid)\n              \n              if(A !== null) {\n                setCards(A.sessionCards)\n              } \n          }\n          gettingNewCard();\n\n        } \n\n      },[newCardAdded, props.newCardAdded])\n\n      // Refresh Cards\n      useEffect(()=> {\n        setNewCardAdded(false);\n\n      },[cards])\n\n    \n\n\n   \n\n    // BRAND NEW CARDS FOR EXISTING PLAYER\n    async function BrandNewCard() {\n\n        console.log(\"Creating Brand New Card\")\n        const cardRef = doc(DB, \"players\", playerID, \"cards\", gameid)\n        const cardData= GenerateCard()\n        const newCard = {\n          sessionCards: [cardData]\n        }\n        const setCardsSnap = await setDoc(cardRef, newCard);\n        setNewCardAdded(true)\n    }\n\n    async function getCards() {\n        const A = await ReturnCardData(DB, playerID, gameid)\n        if(A !== null) {\n          // PLAYER HAS CARDS\n          setCards(A.sessionCards)\n        } else {\n          // PLAYER DOES NOT HAVE CARDS\n          BrandNewCard();\n        }\n    } // END GETCARDS\n\n\n\n\n    useEffect(() => {\n        if(playerID) {\n            getCards()\n        }\n    },[playerID])\n\n    // AUTHENTICATION\n    useEffect(() => {\n    \n        onAuthStateChanged(Auth, (user) => {\n          if (user) {\n            const uid = user.uid;\n            setPlayerID(uid)      \n          } \n        });\n\n    },[]);\n\n\n    return(\n        <CardContainer>\n        {cards&&\n          <>\n          \n              {cards.map((card, index) => \n              <div>\n                {/* <CardTitle>\n                    <p>Card {index+1}</p>\n                </CardTitle> */}\n\n                <Card key={\"Card\" + `${index}`}>\n\n                    <CardTitle>\n                        <CardCell title>B</CardCell>\n                        <CardCell title>I</CardCell>\n                        <CardCell title>N</CardCell>\n                        <CardCell title>G</CardCell>\n                        <CardCell title>O</CardCell>\n                    </CardTitle>\n\n                    <div className=\"cardNumber\">\n                    \n                        <CardCol key={\"B\" + `${index}`}>\n                            \n                            {card.b.map((item, index2) => \n                                <CardCell \n                                key={\"B\" + `${index}` + `${index2}`+ `${item}`} \n                                    active={checkClicked(item, index)? true : false}\n                                    item={item}\n                                    cardnumber={index}\n                                    cellClick={cellClick}\n                                    calls={calledArray}\n                                >\n                                    {item}\n                                \n                                </CardCell>\n                            )}  \n                            \n                        </CardCol>\n\n                        <CardCol key={\"I\" + `${index}`}>\n                            \n                            {card.i.map((item, index2) => \n                                <CardCell \n                                    key={\"I\" + `${index}` + `${index2}` + `${item}`}\n                                    active={checkClicked(item, index)? true : false}\n                                    item={item}\n                                    cardnumber={index}\n                                    cellClick={cellClick}\n                                    calls={calledArray}\n                                >\n                                    {item}\n                                </CardCell>\n                            )}  \n                            \n                        </CardCol>\n\n                        <CardCol key={\"N\" + `${index}`}>\n                            \n                            {card.n.map((item, index2) => \n                                <CardCell \n                                    key={\"N\" + `${index}` + `${index2}` + `${item}`}\n                                    active={checkClicked(item, index)? true : false}\n                                    item={item}\n                                    cardnumber={index}\n                                    cellClick={cellClick}\n                                    calls={calledArray}   \n                                >\n                                    {item == \"FREE\" ? \"😎\" : item }\n                                </CardCell>                \n                            )}  \n                            \n                        </CardCol>\n\n                        <CardCol key={\"G\" + `${index}`}>\n                            \n                            {card.g.map((item, index2) => \n                                <CardCell \n                                key={\"G\" + `${index}` + `${index2}` + `${item}`}\n                                active={checkClicked(item, index)? true : false}\n                                item={item}\n                                cardnumber={index}\n                                cellClick={cellClick}\n                                calls={calledArray}\n                                >\n                                    {item}\n                                </CardCell>\n                            )}  \n                            \n                        </CardCol>\n\n                        <CardCol key={\"O\" + `${index}`}>\n                            \n                            {card.o.map((item, index2) => \n                                <CardCell \n                                key={\"O\" + `${index}` + `${index2}` + `${item}`}\n                                active={checkClicked(item, index)? true : false}\n                                item={item}\n                                cardnumber={index}\n                                cellClick={cellClick}\n                                calls={calledArray}\n                                >\n                                    {item}\n                                </CardCell>\n                            )}  \n                            \n                        </CardCol>\n                    </div>\n\n                \n                </Card>\n              </div>\n              )}\n            \n          </>\n          }\n        </CardContainer>\n    )\n}\n\nexport default BingoCard\n","/Users/rrahate/Code/bingodaddy/src/components/molecules/calls.js",["234","235","236","237","238","239","240","241","242","243","244","245","246"],[],"import { useState, useEffect } from 'react';\nimport styled from '@emotion/styled'\nimport { doc, setDoc, getDoc, updateDoc, onSnapshot, arrayUnion } from \"firebase/firestore\"; \nimport { DB } from \"../../firebaseConfig/firebaseConfig.js\"\nimport Modal from './modal/modal.js';\nimport Button from '../atoms/button.js';\nimport '../../App.css';\n\nfunction Calls(props) {\n    \n    const[calledArray, setCalledArray]= useState([]);\n    const[calledNumber, setCalledNumber]= useState();\n    const[calledNumberDB, setCalledNumberDB]= useState();\n    const [modalVisibility, setModalVisibility] = useState(false)\n    const [modalContent, setModalContent] = useState()\n\n\n    var ArraySeventyFive = Array.from({length: 75}, (_, i) => i + 1)\n    const callsRef = doc(DB, \"sessions\", props.gameid)\n    \n    // useEffect(() => {\n\n    //     async function GetCalls() {\n            \n    //         const callsSnap = await getDoc(callsRef);\n            \n    //         if (callsSnap.exists()) {\n    //           const x = callsSnap.data()\n    //           setCalledArray(x.calls)\n              \n    //         } \n    //       }\n          \n    //       GetCalls();\n          \n    // },[props.gameid])\n\n    useEffect(() => {\n        if(calledArray.length == 75){\n            props.bingoCalled(true)\n        }\n    },[calledArray])\n\n\n    useEffect(()=> {\n\n        \n\n        if(calledNumberDB !== undefined && calledNumberDB !== 0) {\n\n\n            async function SetCalls() {\n        \n                const writeArray = await updateDoc(callsRef, {\n                    calls: arrayUnion(calledNumberDB)\n                });\n\n                const writeCallNumber = await updateDoc(callsRef, {\n                    calledNumber: calledNumberDB\n                });\n\n            } \n              \n            SetCalls();\n        } \n\n    },[calledNumberDB])\n\n    useEffect(() => {\n\n        const unsub = onSnapshot(doc(DB, \"sessions\", props.gameid), (doc) => {\n            const x = doc.data()\n            setCalledArray(x.calls)\n            setCalledNumber(x.calledNumber)\n          });\n\n          return () => unsub();\n    },[])\n\n\n    function Shuffle(a) {\n            \n        for (let i = a.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [a[i], a[j]] = [a[j], a[i]];\n        }\n        return a;\n    }\n\n \n\n    function NewCall() {\n        \n        if(calledArray !== undefined) {\n            \n            let difference = ArraySeventyFive.filter(x => !calledArray.includes(x))\n            let shuffled = Shuffle(difference)\n            let result = shuffled.pop();\n            setCalledNumberDB(result)\n        }\n \n\n    }\n\n    function GetLetter(x) {\n        \n        if(x > 0 && x <= 15) {\n            return \"B\"\n        } else if(x >=   16 && x <= 30) { return \"I\" }\n        else if( x >= 31 && x <= 45) { return \"N\" }\n        else if(x >= 46 && x <= 60) { return \"G\" }\n        else if(x >= 61 && x <= 75) { return \"O\" }\n    }\n\n    function RecentCalls() {\n        setModalVisibility(true)\n    }\n\n    return(\n        <div className='Container'>  \n            <div>\n                <div className='cont-h2'>Calls&nbsp;&nbsp;\n                    {(calledArray.length !== 0)&&props.admin&& \n                        <small><a onClick={RecentCalls} secondary>View All</a></small>\n                    }\n                    {/* {(Object.keys(calledArray).length != 0)&&\n                    <div className=\"pill\">\n                        {calledArray.length}\n                    </div>\n                    } */}\n                </div>\n\n                \n\n            \n                {(Object.keys(calledArray).length == 0)&&\n                    <b className='called-num'>Waiting...</b>\n                }\n                {(calledNumber !== 0)&&\n                    <b className='called-num'>{GetLetter(calledNumber)} - {calledNumber}</b>\n                }\n\n            </div>\n            \n\n\n\n            \n            {props.admin&& \n                \n                <Button onClick={NewCall}>Call It</Button>\n\n            }\n                \n            {(calledArray.length !== 0)&&!props.admin&&\n\n                <Button secondary onClick={RecentCalls}>View Calls</Button>\n            }\n            \n            <Modal visible={modalVisibility} setVisibility={() => setModalVisibility(false)}  modalContent={calledArray} />\n            \n            \n        </div>\n    )\n}\n\nexport default Calls\n","/Users/rrahate/Code/bingodaddy/src/components/molecules/modal/modal.js",["247","248"],[],"import { useState, useEffect } from 'react';\nimport ModalContent from './modalContent';\nimport ModalVerify from './modalVerify';\nimport styled from '@emotion/styled'\nimport { MdClose } from \"react-icons/md\";\n\nfunction Modal(props) {\n\n    // useEffect(()=> {\n    //     console.log(props.visible)\n    // },[props.visible])\n\n    const ModalBg = styled.div`\n        background-color: #A6FFF8;\n        color: #fff;\n        width: ${props => (props.modalC ? '50%' : '100%')};\n        height: 100%;\n        z-index: 20;\n        position: absolute;\n        overflow: scroll;\n        display: flex;\n        flex-direction: column;\n        left: ${props => (props.modalC ? '50%' : '0')};;\n        top: 0;\n        -webkit-box-shadow: -13px 4px 39px -16px rgba(0,0,0,0.5);\n        -moz-box-shadow: -13px 4px 39px -16px rgba(0,0,0,0.5);\n        box-shadow: -13px 4px 39px -16px rgba(0,0,0,0.5);\n        \n\n        & > .close-btn {\n            top: 0px;\n            display: flex;\n            flex-direction: row;\n            justify-content: space-between;\n            align-items: center;\n            \n            background-color: #000;\n            padding: 20px 5%;\n\n            & > .title {\n                font-size: 1.5em;\n                font-weight: 600;\n            }\n\n        }\n\n        & > .content {\n            \n            overflow: scroll;\n            height: 95%;\n            padding: 10px;\n            \n\n        }\n    \n    `\n\n    const CloseBtn = styled.a`\n        text-align: right;\n\n        & > svg {\n            font-size: 1.4em;\n        }\n    `\n\n    \n    if (props.visible) {\n        return (\n            <ModalBg modalC={props.modalContent}>\n                <div className='close-btn'>\n                    <div className='title'>\n                        {props.modalContent&& \n                            <>Numbers Called</>\n                        }\n                    </div>\n                    <CloseBtn onClick={props.setVisibility}>\n                        <MdClose />\n                    </CloseBtn>\n                </div>\n                <div className='content'>\n                {props.modalContent&&\n                    <ModalContent modalContent={props.modalContent}  />\n                }\n                {props.verify&&props.calledList&&\n                    <ModalVerify calledList={props.calledList} />\n                }\n            \n                </div>\n            </ModalBg>\n        )\n\n    } else {\n        return null\n    }\n\n        \n}\n\nexport default Modal","/Users/rrahate/Code/bingodaddy/src/components/molecules/modal/modalContent.js",["249","250","251","252"],[],"import { useState, useEffect } from 'react';\nimport styled from '@emotion/styled'\n\nfunction ModalContent(props) {\n\n\n    const CallsContainer = styled.div`\n        display: flex;\n        flex-direction: row;\n        width: 100%;\n        align-self: center;\n        flex-wrap: wrap;\n        justify-content: flex-start;\n        \n    `\n\n    const CallsRow = styled.div`\n        \n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n    `\n    const CallsCell = styled.div`\n        text-align: center; \n        width: 50px;\n        height: 30px;\n        padding: 25px;\n        font-size: 1.5em;\n        display: flex;\n        border-radius: 10px;\n        margin: 10px;\n        align-items: center;\n        justify-content: center;\n        background-color: ${props => (props.called ? '#FED317' : props.title ? '#000' : '#fff')};\n        color: ${props => (props.title ? '#fff' : '#001e1d')};\n        border: ${props => (props.title ? '1px solid #000' : props.called ? `1px solid #FED317` : `1px solid #61EDEA`)};\n        border-radius: 10px;\n        \n        \n    `\n\n    var ArraySeventyFive = Array.from({length: 75}, (_, i) => i + 1)\n    \n    useEffect(() => {\n        console.log(props.modalContent)\n    },[props.modalContent])\n\n    \n    return (\n\n        <CallsContainer>\n            {/* <CallsRow>\n                <CallsCell title>B</CallsCell>\n                    {ArraySeventyFive.slice(0,15).map((item, index) => \n                        \n                            <CallsCell key={\"calls\" + `${index}` + `${item}`} called={props.modalContent.includes(item)? true : false}>\n                                {item}\n                            </CallsCell>\n                            \n\n                        )\n                    } \n            </CallsRow>\n            <CallsRow>\n            <CallsCell title>I</CallsCell>\n                    {ArraySeventyFive.slice(15,30).map((item, index) => \n                        \n                            <CallsCell key={\"calls\" + `${index}` + `${item}`} called={props.modalContent.includes(item)? true : false}>\n                                {item}\n                            </CallsCell>\n                            \n\n                        )\n                    } \n            </CallsRow>\n            <CallsRow>\n            <CallsCell title>N</CallsCell>\n                    {ArraySeventyFive.slice(30,45).map((item, index) => \n                        \n                            <CallsCell key={\"calls\" + `${index}` + `${item}`} called={props.modalContent.includes(item)? true : false}>\n                                {item}\n                            </CallsCell>\n                            \n\n                        )\n                    } \n            </CallsRow>\n            <CallsRow>\n            <CallsCell title>G</CallsCell>\n                    {ArraySeventyFive.slice(45,60).map((item, index) => \n                        \n                            <CallsCell key={\"calls\" + `${index}` + `${item}`} called={props.modalContent.includes(item)? true : false}>\n                                {item}\n                            </CallsCell>\n                            \n\n                        )\n                    } \n            </CallsRow>\n            <CallsRow>\n            <CallsCell title>O</CallsCell>\n                    {ArraySeventyFive.slice(60,75).map((item, index) => \n                        \n                            <CallsCell key={\"calls\" + `${index}` + `${item}`} called={props.modalContent.includes(item)? true : false}>\n                                {item}\n                            </CallsCell>\n                            \n\n                        )\n                    } \n            </CallsRow> */}\n\n\n                {ArraySeventyFive.slice(0,75).map((item, index) => \n                        \n                        <CallsCell key={\"calls\" + `${index}` + `${item}`} called={props.modalContent.includes(item)? true : false}>\n                            {item}\n                        </CallsCell>\n                        \n\n                    )\n                }\n            \n        </CallsContainer>\n    )\n\n        \n}\n\nexport default ModalContent",[],"/Users/rrahate/Code/bingodaddy/src/components/molecules/modal/modalPlayerName.js",["253","254"],[],"import { useState, useRef} from 'react';\nimport Form from '../../atoms/form';\nimport styled from '@emotion/styled'\n\n\n\n\nconst ModalPlayerName = (props) => {\n\n    \n\n    const ModalBg = styled.div`\n        background-color: #A6FFF8;\n        width: 100%;\n        height: 100%;\n        z-index: 20;\n        position: absolute;\n        color: #111;\n        left: 0;\n        top: 0;\n        padding: 5%;\n\n        & > div:nth-child(1) {\n\n            text-align: right;\n        }\n    \n    `\n        \n    return (\n        <ModalBg>\n            <Form value={props.value} cancel={props.cancel} join={props.join} />\n        </ModalBg>\n    )\n\n\n\n        \n}\n\nexport default ModalPlayerName","/Users/rrahate/Code/bingodaddy/src/components/utilities.js",["255","256","257","258","259","260"],[],"import { doc, setDoc, getDoc, collection, updateDoc, arrayUnion, getDocs, onSnapshot } from \"firebase/firestore\"; \n\n// Generate a Card\nexport function GenerateCard() {\n\n    const B = randomUnique(1,15)\n    const I = randomUnique(16,30)\n    const NOld = randomUnique(31,45)\n    const N = Object.assign([], NOld, {2: \"FREE\"});\n    const G = randomUnique(46,60)\n    const O = randomUnique(61,75)\n    const Card = {\n\n      b: B,\n      i: I,\n      n: N,\n      g: G,\n      o: O\n\n    }\n\n    return Card\n\n}\n\n// Generate a Random Array \nconst randomUnique = (min, max) => {\n    let nums = new Set();\n    const range = max - min + 1\n\n    while (nums.size < 5) {\n        nums.add(Math.floor(Math.random() * range + min));\n    }\n    return [...nums];\n}\n\n\nexport async function ReturnCardData(database, pid, gid) {\n\n    const cardRef = doc(database, \"players\", pid, \"cards\", gid)\n    const cardSnap = await getDoc(cardRef);\n\n    if (cardSnap.exists()) {\n        \n        const x = cardSnap.data()\n        return x;\n\n        \n      } else{\n\n        return null;\n        \n      }\n}\n\n\nexport async function ReturnPlayerDB(database, pid) {\n  const playerRef = doc(database, \"players\", pid)\n  const playerSnap = await getDoc(playerRef);\n\n  if (playerSnap.exists()) {\n        \n    const x = playerSnap.data()\n    return x;\n\n    \n  } else{\n\n    return null;\n    \n  }\n\n}\n\nexport const theme = {\n  dark: {\n    scheme: \"dark\",\n    background: \"#222\",\n    textcolor: \"#fff\",\n    gray: \"#ddd\",\n    \n    card: {\n      cellBg: \"#fff\",\n      cellFont: \"#111\",\n      cellRed: \"#FD341D\",\n      cellBorder: \"#111\",\n      active: {\n        cellBg: \"#5b6a62\",\n        cellFont: \"#111\",\n      }\n    },\n\n    button: {\n      primary: {\n        bg: \"#111\",\n        color: \"#fff\",\n      },\n\n      secondary: {\n        bg: \"transparent\",\n        color: \"#111\",\n      }\n    },\n\n    rightrail: {\n      bg: \"#002E2B\",\n    }\n\n  },\n\n  light: {\n    scheme: \"light\",\n    background: \"#A6FFF8\",\n    textcolor: \"#111\",\n    gray: \"#555\",\n\n    card: {\n      cardbg: \"#fff\",\n      cellBg: \"#61EDEA\",\n      cellFont: \"#111\",\n      cellRed: \"#FD341D\",\n      cellBorder: \"#61EDEA\",\n      active: {\n        cellBg: \"#FED317\",\n        cellFont: \"#91BCA0\",\n      }\n    },\n\n    button: {\n      primary: {\n        bg: \"#111\",\n        color: \"#fff\",\n      },\n\n      secondary: {\n        bg: \"transparent\",\n        color: \"#111\",\n      }\n    },\n\n    rightrail: {\n      bg: \"#1966B3\",\n    }\n  }\n\n}","/Users/rrahate/Code/bingodaddy/src/components/atoms/form.js",["261","262","263","264","265"],[],"import { useState, useRef, useEffect, useCallback } from 'react';\nimport Button from './button';\nimport styled from '@emotion/styled'\nimport \"../atoms/form.css\"\nimport { useNavigate } from 'react-router-dom';\n\n\n\nconst Form = (props) => {\n\n  const Container = styled.div`\n   \n\n    & > div {\n      \n      \n      & > div {\n        width: 50%;\n      }\n    }\n\n  `\n\n    const [textInput, setTextInput] = useState(\"\");\n    const [showError, setShowError] = useState(false);\n    const navigate = useNavigate();\n    \n\n    function save() {\n\n      if(Object.keys(textInput).length !== 0) {\n        props.value(textInput)\n        setShowError(false)\n      } else {\n        setShowError(true)\n      }\n      \n        \n    }\n\n    function cancel() {\n      navigate('/')\n    }\n\n\n    return (\n      \n      <div className='container'>\n        <div>\n          <input\n            className='formInput'\n            type=\"text\"\n            placeholder={props.join? \"Enter Game ID\" : \"Enter Name\"}\n            value={textInput}\n            onChange={(e) => setTextInput(e.target.value)}\n          />\n          {showError&&\n            <p>Please enter a valid {props.join? \"game id\" : \"name\"}</p>\n          }\n\n          <div className='bttn-group'>\n          <Button onClick={save}>\n            {props.join?\n              \"Join Game\" : \"Join Game\"\n            }\n            \n          </Button>\n\n        \n          <Button onClick={props.cancel} secondary>\n            Cancel\n          </Button>\n          \n        </div>\n       \n        \n        </div>\n      </div>\n        \n    );\n}\n\nexport default Form","/Users/rrahate/Code/bingodaddy/src/components/atoms/cardcell.js",["266","267","268","269"],[],"import { useState, useEffect, useCallback, Children } from 'react';\nimport styled from '@emotion/styled'\nimport { useParams} from 'react-router-dom';\nimport \"../atoms/cardcell.css\"\n\n\n\nconst CardCell = (props) => {\n\n    \n\n    const Cell = styled.div`\n        text-align: center; \n        width: 50px;\n        height: 30px;\n        display: flex;\n        justify-content: center;\n        padding: 25px;\n        align-items: center;\n        border: ${props => (props.title ? '1px solid #000' : props.active ? `1px solid #FED317` : `1px solid #61EDEA`)};\n        border-radius: 10px;\n        margin: 10px;\n        cursor: ${props => (props.title ? 'default ' : 'pointer')};\n        color: ${props => (props.title ? '#fff' : '#001e1d')};\n\n        &:hover {\n            background-color: ${props => (props.title ? 'none' : props.active ? 'none' : props.misClick ? '#FD341D' : '#fde8c8')};\n            // -webkit-box-shadow: ${props => (props.title ? 'none' : props.active ? 'none' : props.misClick ? 'none' : ' inset -9px -8px 5px -4px rgba(0,0,0,1)')}; \n            // -moz-box-shadow: ${props => (props.title ? 'none' : props.active ? 'none' : props.misClick ? 'none' : ' inset -9px -8px 5px -4px rgba(0,0,0,1)')}; \n            // box-shadow: ${props => (props.title ? 'none' : props.active ? 'none' : props.misClick ? 'none' : ' inset -9px -8px 5px -4px rgba(0,0,0,1)')}; \n        }\n\n        \n        \n        background-color: ${props => (props.title ? '#000' : props.active ? `#FED317` : '#fff')}; \n        background-color: ${props => (props.misClick ? '#FD341D' : \"auto\")};\n        animation: ${props => (props.misClick && \"horizontal-shaking 0.3s\")};\n        animation-iteration-count: 3;\n\n    `\n\n    const [active, setActive] = useState(props.active)\n    const [misClick, setMisClick] = useState(false)\n    let { gameid } = useParams();\n    \n\n\n\n    function cellClicked(item,cardnumber) {\n        \n        if(props.calls.includes(item) || item == \"FREE\") {\n            props.cellClick(item, cardnumber)\n            setActive(!active)\n        } else {\n            setMisClick(true)\n        }\n        \n    }\n\n    useEffect(() => {\n        setTimeout(() => {\n          setMisClick(false);\n        }, 900)\n      },);\n\n\n    return (\n        \n    \n            <Cell\n                onClick={() => cellClicked(props.item, props.cardnumber)} \n                title={props.title}\n                active={active} \n                misClick={misClick}\n            >\n                {props.children}\n            </Cell>\n     \n    )\n\n}\n\nexport default CardCell","/Users/rrahate/Code/bingodaddy/src/components/molecules/modal/modalVerify.js",["270","271","272","273","274","275","276","277"],[],"import { useState, useEffect } from 'react';\nimport styled from '@emotion/styled'\nimport { ReturnCardData } from '../../utilities';\nimport { useParams } from 'react-router-dom';\nimport { DB } from '../../../firebaseConfig/firebaseConfig.js'\nimport { doc, getDoc } from \"firebase/firestore\"; \nimport BingoCardVerify from '../bingoCardVerify.js';\n\n\n\nfunction ModalVerify(props) {\n\n    const H3 = styled.h3`\n        text-align: left;\n        font-size: 2em;\n        margin-bottom: 0;\n        margin: 40px 0px 0px 40px;\n        color: #111;\n    `\n\n    const[playerCards, setPlayerCards] = useState([])\n    const[calledArray, setCalledArray] = useState([])\n    let { gameid } = useParams();\n    const callsRef = doc(DB, \"sessions\", gameid)\n\n    // async function GetCalls() {\n            \n    //     const callsSnap = await getDoc(callsRef);\n        \n    //     if (callsSnap.exists()) {\n    //       const x = callsSnap.data()\n    //       setCalledArray(x.calls)\n          \n    //     } \n    // }\n      \n    \n    \n    // async function getCards(x, y) {\n        \n    //     const A = await ReturnCardData(DB, x, gameid)\n        \n    //     if(A !== null) {\n    //       // PLAYER HAS CARDS\n          \n    //       setPlayerCards((playerCards) => [...playerCards, \n    //         {   name: y,\n    //             id: x,\n    //             cards: A.sessionCards\n    //         }\n        \n    //     ])\n        \n    //     } else {\n    //         console.log(\"nothing\")\n    //     }\n\n    // } // END GETCARDS\n\n    // useEffect(() => {\n       \n    //     if(Object.keys(props.calledList).length != 0) {\n    //         props.calledList.forEach(item => \n    //                 getCards(item.playerID, item.playerName) \n    //         )\n\n    //         GetCalls();\n    //     }\n       \n    // },[props.calledList])\n    \n\n    // useEffect(() => {\n    //     console.log(playerCards)\n    //     console.log(props.calledList)\n    // },[playerCards])\n\n    useEffect(() => {\n        console.log(props.calledList)\n\n    },[])\n    \n    return (\n\n        <>\n            {(Object.keys(props.calledList).length !== 0)&&\n                props.calledList.map((item, index) => \n                    <div>\n                        <H3>{item.playerName}</H3>\n                        <BingoCardVerify pid={item.playerID}  />\n                    </div>\n\n                )\n            \n            }\n        </>\n       \n    )\n\n        \n}\n\nexport default ModalVerify","/Users/rrahate/Code/bingodaddy/src/components/molecules/playerList.js",["278","279","280","281","282","283"],[],"import { useState, useEffect } from 'react';\nimport styled from '@emotion/styled'\nimport '../../App.css';\nimport Modal from './modal/modal.js';\n\nfunction PlayerList (props) {\n\n    const Pill = styled.div`\n        padding: 2px 10px;\n        display: inline-block;\n        background-color: #002e2c;\n        font-size: 0.9em;\n        text-align: center;\n        border-radius: 5px;\n        color: #eee;\n    `\n\n\n    return(\n        <div className='right-rail-container'>\n            <h3 className=\"cont-h2\">Players <div className='pill'>{props.playerList.length}</div></h3>\n                \n            {(props.playerList.length !== 0)&&\n                props.playerList.map((item, index) => \n                                        \n                    <div key={\"players\" + `${index}` + `${item}`}>{item.playerName}</div>\n\n                )\n            \n            }\n        </div>\n    )\n\n}\n\nexport default PlayerList","/Users/rrahate/Code/bingodaddy/src/components/molecules/bingoCalled.js",["284","285","286","287"],[],"import { useState, useEffect } from 'react';\nimport styled from '@emotion/styled'\nimport bgwin from '../../imgs/win-bg.gif'\nimport Button from '../atoms/button';\n\nfunction BingoCalled(props) {\n    const Banner = styled.div`\n        width: 30%;\n        height: 30%;\n        font-size: 1em;\n        justify-content: center;\n        background-image: url(${bgwin});\n        background-repeat: no-repeat;\n        background-position: center;\n        background-size: 200%;\n        color: #000;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        text-align: center;\n        border-radius: 10px;\n        position: absolute;\n        z-index: 10;\n        left: 35%;\n        top: 30%;\n        border: 10px solid #eee;\n    `\n    \n    const Bingo = styled.div`\n        color: #000;\n        font-weight: 700;\n        font-size: 1.5em;\n        padding: 5px 10px;\n        border-radius: 30px;\n        background-color: #fff;;\n        display: inline-block;\n        \n    `\n\n    const Pills = styled.div`\n        color: #fff;\n        font-weight: 400;\n        font-size: 0.7em;\n        margin-top: 5px;\n        padding: 5px 10px;\n        border-radius: 30px;\n        background-color: #000;\n        display: inline-block;\n    `\n    const PillsCont = styled.div`\n        display: flex;\n        flex-direction: row;\n        justify-content: space-around;\n    `\n    \n\n    function review() {\n        props.verify();   \n    }\n\n    useEffect(() => {\n        console.log(props.list)\n    },[props.list])\n\n\n    return(\n        <>\n\n        <Banner>\n            <Bingo>Bingo!</Bingo><br />\n            {/* <Button onClick={review}>Review Winner's Card(s)</Button> */}\n            <PillsCont>\n            {(props.list.length !== 0)&&\n                    \n                props.list.map((item, index) => \n                                        \n                    <Pills key={\"bingo\" + `${index}` + `${item}`} onClick={review}>\n                        {item.playerName}\n                    </Pills>\n\n                )\n                \n            }\n            </PillsCont>\n        </Banner>\n\n        </>\n        \n    )\n}\n\nexport default BingoCalled\n","/Users/rrahate/Code/bingodaddy/src/components/atoms/button.js",["288"],[],"import { useState } from 'react';\nimport styled from '@emotion/styled'\n\n\n\nconst Button = (props) => {\n\n\n\n    const Btn = styled.div`\n    text-align: center; \n    border-radius: 10px;\n    font-weight: 400;\n    border-radius: 10px;\n    padding: 20px;\n    cursor: pointer;\n    background-color: ${props => (props.secondary ? `#72fff4` : `#111`)};\n    background-color: ${props => (props.red&& `#FD341D`)};\n    background-color: ${props => (props.blue&& `#1976D2`)};\n    color: ${props => (props.secondary ? `#111` : `#fff`)};\n    cursor: pointer;\n    border: ${props => (props.secondary ? '1px solid #b1c4e5' : `1px solid #111`)};\n    border: ${props => (props.red&& '1px solid #FD341D')};\n    border: ${props => (props.blue&& '1px solid #1976D2')};\n\n    &:hover {\n        border: ${props => (props.secondary ? '1px solid #111' : '1px solid #8995A9')};\n        border: ${props => ((props.red || props.blue)&& '1px solid #111')};\n        \n    }\n\n    & > svg {\n        font-size: 1em;\n        margin-right: 5px;\n    }\n\n\n    `\n\n    return (\n        <Btn secondary={props.secondary} tertiary={props.tertiary} red={props.red} blue={props.blue} onClick={props.onClick}>\n            {props.children}\n        </Btn>\n    )\n\n}\n\nexport default Button","/Users/rrahate/Code/bingodaddy/src/pages/gameEnd.js",["289","290","291","292","293","294","295","296"],[],"import { useState, useEffect } from 'react';\nimport { DB }  from \"../firebaseConfig/firebaseConfig.js\"\nimport styled from '@emotion/styled'\nimport Button from '../components/atoms/button';\nimport { ReturnPlayerDB } from '../components/utilities.js';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\nimport { doc, updateDoc, deleteDoc, onSnapshot} from \"firebase/firestore\"; \nimport HomeImg from \"../imgs/home.jpg\"\nimport Logo from \"../imgs/logo.png\"\n\nconst BG = styled.div`\n    background-color: #A6FFF8;\n    color: #111;\n    width: 100%;\n    height: 100%;\n    overflow: scroll;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: flex-start;\n\n    & > .logo {\n      width: 20px;\n    }\n  \n`\n\nconst IMG = styled.div`\n    width: 50%;\n    height: 100vh;\n    overflow: hidden;\n    \n    & > img {\n      width: 100%;\n    }\n`\n\nconst ButtonContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    \n    \n     & > div {\n        margin-right: 20px;\n     }\n`\nconst Content = styled.div`\n    width: 50%;\n    font-size: 1.2em;\n    padding: 50px;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    \n\n    & > h1 {\n        font-weight: 400;\n        line-height: 80px;\n        margin: 40px 0;\n        font-size: 4em;\n    }\n`\n\nfunction GameEnd() {\n    \n    let { gameid } = useParams();\n    const navigate = useNavigate();\n    const location = useLocation();\n    const [admin, setAdmin] = useState(false)\n    const [gameEnd, setGameEnd] = useState(true)\n\n    useEffect(() => {\n        console.log(gameid)\n        const x = location.state.playerID\n        const y = location.state.admin\n\n        console.log(y)\n        if(x == y) {\n            setAdmin(true)\n        }\n        \n    },[])\n\n    useEffect(() => {\n\n        const unsub = onSnapshot(doc(DB, \"sessions\", gameid), (doc) => {\n          const x = doc.data()\n          setGameEnd(x.sessionEnd)\n          \n        });\n\n        return () => unsub();\n\n    },[])\n\n    async function restart() {\n\n       // For Every Player who decides to join back clear the cards\n       \n       const A = await ReturnPlayerDB(DB, location.state.playerID)\n\n       if (A != null) {\n        \n        // Admin in Player DB\n\n            const sessionDocData= {\n            sessionID: gameid,\n            admin: location.state.admin,\n            sessionEnd: false, \n            players: [\n                {\n                playerName: A.playerName,\n                playerID: A.playerID,\n                }\n            ],\n            calls:[],\n            bingo:[],\n            calledNumber: 0\n\n            } \n            \n            const sessionRef = doc(DB, \"sessions\", gameid) \n\n            const playerRefCard = doc(DB, \"players\", A.playerID, \"cards\", gameid)\n            const playerRefCardClick = doc(DB, \"players\", A.playerID, \"cardsCellClick\", gameid)\n\n            if(admin) {\n                const setGameStop = await updateDoc(sessionRef, sessionDocData); \n            }\n\n\n            const playerCardClear = await deleteDoc(playerRefCard);\n            const playerCardClickClear = await deleteDoc(playerRefCardClick);\n\n            navigate('/'+ gameid)\n        }\n          \n          \n          \n\n    }\n\n    \n\n\n    return (\n        <BG>\n            <IMG>\n              <img src={HomeImg}  />\n            </IMG>\n            <Content>\n                <p><img src={Logo} className=\"logo\" width=\"60%\" /></p>\n                {gameEnd&&\n                    <h1>Thanks for Playing!</h1>\n                }\n\n                {admin ?\n                    <ButtonContainer>\n                        <Button onClick={restart}>Restart Game</Button>\n                        <Button onClick={() => navigate('/')} secondary>BinGoDaddy Home</Button>\n                    </ButtonContainer>\n                    :\n                    \n                    <div>\n                        {!gameEnd ?\n                            \n                                <Button onClick={restart}>Re-join Game</Button>\n                            \n                            :\n\n\n                            <ButtonContainer>\n                                You will be able to re-join once the admin restarts the game     \n                            </ButtonContainer>\n                        }\n\n                        \n                    </div>\n                }\n            </Content>\n            \n        </BG>\n    )\n}\n\nexport default GameEnd\n","/Users/rrahate/Code/bingodaddy/src/components/molecules/players.js",["297","298","299","300","301","302","303","304","305"],[],"import { useState, useEffect } from 'react';\nimport styled from '@emotion/styled'\nimport { doc, setDoc, getDoc, updateDoc, onSnapshot, arrayUnion } from \"firebase/firestore\"; \nimport { DB } from \"../../firebaseConfig/firebaseConfig.js\"\n\nfunction Players(props) {\n\n    useEffect(()=> {\n\n        console.log(\"Test COmp\")\n    },[])\n\n    return(\n        <div>\n            Player\n        </div>\n    )\n}\n\nexport default Players","/Users/rrahate/Code/bingodaddy/src/pages/confetti.js",["306","307","308"],[],"import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport ReactCanvasConfetti from \"react-canvas-confetti\";\nimport bgwin from '../imgs/win-bg.gif'\nimport BingoCalled from \"../components/molecules/bingoCalled\";\n\nfunction randomInRange(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nconst canvasStyles = {\n  position: \"fixed\",\n  pointerEvents: \"none\",\n  width: \"100%\",\n  height: \"100%\",\n  top: 0,\n  left: 0,\n  backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n//   backgroundImage: `url(${bgwin})`,\n//   backgroundSize: 'cover',\n};\n\nfunction getAnimationSettings(originXA, originXB) {\n  return {\n    startVelocity: 20,\n    spread: 360,\n    ticks: 90,\n    zIndex: 0,\n    particleCount: 150,\n    origin: {\n      x: randomInRange(originXA, originXB),\n      y: Math.random() - 0.1\n    }\n  };\n}\n\nexport default function Fireworks() {\n  const refAnimationInstance = useRef(null);\n  const [intervalId, setIntervalId] = useState();\n\n  const getInstance = useCallback((instance) => {\n    refAnimationInstance.current = instance;\n  }, []);\n\n  const nextTickAnimation = useCallback(() => {\n    if (refAnimationInstance.current) {\n      refAnimationInstance.current(getAnimationSettings(0.1, 0.3));\n      refAnimationInstance.current(getAnimationSettings(0.7, 0.9));\n    }\n  }, []);\n\n\n  useEffect(() => {\n    setIntervalId(setInterval(nextTickAnimation, 400));\n  },[])\n\n\n//   const pauseAnimation = useCallback(() => {\n//     clearInterval(intervalId);\n//     setIntervalId(null);\n//   }, [intervalId]);\n\n//   const stopAnimation = useCallback(() => {\n//     clearInterval(intervalId);\n//     setIntervalId(null);\n//     refAnimationInstance.current && refAnimationInstance.current.reset();\n//   }, [intervalId]);\n\n  useEffect(() => {\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [intervalId]);\n\n  return (\n    <div className=\"confetti\">\n      <ReactCanvasConfetti refConfetti={getInstance} style={canvasStyles} />\n    </div>\n  );\n}\n","/Users/rrahate/Code/bingodaddy/src/components/molecules/gameLayout.js",["309"],[],"import styled from '@emotion/styled'\nimport { useTheme } from '@emotion/react';\nimport { Children } from 'react';\n\nfunction Layout(props) {\n    \n    const theme = useTheme();\n    const PPL = styled.div`\n        width: 100%;\n        height: 100%;\n        display: flex;\n        flex-direction: row;\n\n        & > .player-card-area {\n            width: 70%;\n            height: 100%;\n            display: flex;\n            flex-direction: column;\n            overflow: scroll;\n            background-color: ${theme.background};\n            color: ${theme.color};\n        }\n\n        & > .player-right-pane-area {\n            width: 30%;\n            height: 100%;\n            background-color: ${theme.rightrail.bg};\n            color: ${theme.color};\n            overflow: scroll;\n            padding: 20px 2%; \n        }\n\n        & > .right-rail-container {\n            background-color: #083937;\n            border-radius: 10px;\n            padding: 20px; \n            \n            margin: 20px 0;\n            \n        }\n\n    `\n\n    return (\n        <PPL>\n            {props.children}\n        </PPL>\n    );\n}\n\nexport default Layout","/Users/rrahate/Code/bingodaddy/src/components/molecules/bingoCardVerify.js",["310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358"],[],"import { useState, useEffect, useMemo } from 'react';\nimport styled from '@emotion/styled'\nimport CardCell from '../atoms/cardcell';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { ReturnCardData, GenerateCard } from '../utilities';\nimport { DB, Auth }  from \"../../firebaseConfig/firebaseConfig.js\"\nimport { onAuthStateChanged } from \"firebase/auth\"\nimport { doc, setDoc, getDoc, collection, updateDoc, arrayUnion, getDocs, onSnapshot, arrayRemove, writeBatch } from \"firebase/firestore\"; \nimport { useTheme } from '@emotion/react';\n\nfunction BingoCardVerify(props) {\n\n    \n\n    const CardContainer = styled.div`\n        display: flex;\n        flex-direction: row;\n        height: 100%;\n        align-items: center;\n        overflow: scroll;\n        padding: 0 20px;\n\n        & > div {\n            margin: 10px 20px;\n            padding: 0 20px 20px 20px;\n            background-color: #fff;\n            border-radius: 20px;\n            -webkit-box-shadow: 0px 18px 22px -1px rgba(0,0,0,0.33); \n            box-shadow: 0px 18px 22px -1px rgba(0,0,0,0.33);\n        }\n    `\n    \n    const Card = styled.div`\n        display: flex;\n        flex-direction: column;\n        font-size: 1.5em;\n        justify-content: flex-start;\n\n        & > .cardNumber {\n            display: flex;\n            flex-direction: row;\n        }\n        \n    `\n    const CardCol = styled.div`\n        padding: 0;\n        margin: 0\n    `\n\n    const CardTitle = styled.div`\n\n        margin: 0 -20px 10px -20px; \n        padding: 20px;\n        background: #1966B3;\n        display: flex;\n        flex-direction: row;\n        border-radius: 20px 20px 0 0;\n        \n    `\n\n    const [bCalled, setBCalled] = useState(false)\n    const [cards, setCards] = useState([])\n    const [playerID, setPlayerID] = useState()\n    const [newCardAdded, setNewCardAdded] = useState(props.newCardAdded) \n    const [calledArray, setCalledArray] = useState([])\n    const [clickedCellArray, setClickedCellArray] = useState([])\n    let { gameid } = useParams();\n    \n\n    // useEffect(() => {\n    //     GetClickedCells()\n    //     console.log(\"Card Refresh\")\n    // },[props.cardsData])\n\n    // useEffect(() => {\n    //     console.log(props.bingoList)\n    //     if(Object.keys(props.bingoList).length != 0) {\n    //         props.bingoList.forEach(item => \n    //                 getCards(item.playerID, item.playerName) \n    //         )\n\n    //     }\n    // },[props.bingoList])\n\n    useEffect(() => {\n        getCards(props.pid)\n        GetClickedCells(props.pid)\n    },[props.pid])\n\n    async function GetClickedCells(a) {\n        \n        const cardCellClickRef = doc(DB, \"players\", a , \"cardsCellClick\", gameid)\n        const cellSnap = await getDoc(cardCellClickRef);\n        \n        if (cellSnap.exists()) {\n          const b = cellSnap.data()\n          setClickedCellArray(b)\n        } \n    } // END Get Clicked Cells\n\n    async function getCards(x) {\n        \n        const A = await ReturnCardData(DB, x, gameid)\n        if(A !== null) {\n          // PLAYER HAS CARDS\n\n          setCards(A.sessionCards)\n        \n        } else {\n            console.log(\"nothing\")\n        }\n\n    } // END GETCARDS\n\n\n    const callsRef = doc(DB, \"sessions\", gameid)\n\n    \n\n\n    function bingoCalled () {\n        props.bingoCalled(true)\n    }\n\n\n    function check(x) {\n       \n       const A = calledArray\n       if((A !== undefined) && (A !== null)) {\n            if(x == \"FREE\") {\n                return true\n            } else return A.includes(x)\n       }\n       \n       \n    }\n\n    function checkClicked(x, ind) {\n       const A = clickedCellArray\n       if(x == \"FREE\") return true\n       else if((A[ind] !== undefined) && (A[ind] !== null)) {\n            if(A[ind].includes(x)) return true\n            else return false\n       }\n    }\n    \n\n\n   \n\n\n\n\n    return(\n        \n        <CardContainer>\n            \n        {cards&&\n          <>\n          \n              {cards.map((card, index) => \n              <div>\n                {/* <CardTitle>\n                    <p>Card {index+1}</p>\n                </CardTitle> */}\n\n                <Card key={\"Card\" + `${index}`}>\n                \n                    <CardTitle>\n                        <CardCell title>B</CardCell>\n                        <CardCell title>I</CardCell>\n                        <CardCell title>N</CardCell>\n                        <CardCell title>G</CardCell>\n                        <CardCell title>O</CardCell>\n                    </CardTitle>\n\n                    <div className=\"cardNumber\">\n                    \n                        <CardCol key={\"B\" + `${index}`}>\n                            \n                            {card.b.map((item, index2) => \n                                <CardCell \n                                key={\"B\" + `${index}` + `${index2}`+ `${item}`} \n                                    active={checkClicked(item, index)? true : false}\n                                    item={item}\n                                    cardnumber={index}\n                                    calls={calledArray}\n                                >\n                                    {item}\n                                \n                                </CardCell>\n                            )}  \n                            \n                        </CardCol>\n\n                        <CardCol key={\"I\" + `${index}`}>\n                            \n                            {card.i.map((item, index2) => \n                                <CardCell \n                                    key={\"I\" + `${index}` + `${index2}` + `${item}`}\n                                    active={checkClicked(item, index)? true : false}\n                                    item={item}\n                                    cardnumber={index}\n                                    \n                                    calls={calledArray}\n                                >\n                                    {item}\n                                </CardCell>\n                            )}  \n                            \n                        </CardCol>\n\n                        <CardCol key={\"N\" + `${index}`}>\n                            \n                            {card.n.map((item, index2) => \n                                <CardCell \n                                    key={\"N\" + `${index}` + `${index2}` + `${item}`}\n                                    active={checkClicked(item, index)? true : false}\n                                    item={item}\n                                    cardnumber={index}\n                                    calls={calledArray}   \n                                >\n                                    {item == \"FREE\" ? \"😎\" : item }\n                                </CardCell>                \n                            )}  \n                            \n                        </CardCol>\n\n                        <CardCol key={\"G\" + `${index}`}>\n                            \n                            {card.g.map((item, index2) => \n                                <CardCell \n                                key={\"G\" + `${index}` + `${index2}` + `${item}`}\n                                active={checkClicked(item, index)? true : false}\n                                item={item}\n                                cardnumber={index}\n                                calls={calledArray}\n                                >\n                                    {item}\n                                </CardCell>\n                            )}  \n                            \n                        </CardCol>\n\n                        <CardCol key={\"O\" + `${index}`}>\n                            \n                            {card.o.map((item, index2) => \n                                <CardCell \n                                key={\"O\" + `${index}` + `${index2}` + `${item}`}\n                                active={checkClicked(item, index)? true : false}\n                                item={item}\n                                cardnumber={index}\n                                \n                                calls={calledArray}\n                                >\n                                    {item}\n                                </CardCell>\n                            )}  \n                            \n                        </CardCol>\n                    </div>\n\n                \n                </Card>\n              </div>\n              )}\n            \n          </>\n          }\n\n            \n        </CardContainer>\n    )\n}\n\nexport default BingoCardVerify\n","/Users/rrahate/Code/bingodaddy/src/components/molecules/modal/modalRules.js",["359","360","361"],[],"import { useState, useEffect } from 'react';\nimport styled from '@emotion/styled'\nimport Rules from \"../../../imgs/rules.png\"\nimport { MdClose } from \"react-icons/md\";\n\nfunction ModalRules(props) {\n\n\n    const ModalBg = styled.div`\n        background-color: #A6FFF8;\n        color: #fff;\n        width: 100%;\n        height: 100%;\n        z-index: 20;\n        position: absolute;\n        overflow: scroll;\n        display: flex;\n        flex-direction: column;\n        top: 0;\n        left: 0;\n        -webkit-box-shadow: -13px 4px 39px -16px rgba(0,0,0,0.5);\n        -moz-box-shadow: -13px 4px 39px -16px rgba(0,0,0,0.5);\n        box-shadow: -13px 4px 39px -16px rgba(0,0,0,0.5);\n        \n\n        & > .close-btn {\n            top: 0px;\n            display: flex;\n            flex-direction: row;\n            justify-content: space-between;\n            align-items: center;\n            \n            background-color: #000;\n            padding: 20px 5%;\n\n            & > .title {\n                font-size: 1.5em;\n                font-weight: 600;\n            }\n\n        }\n\n        & > .content {\n            \n            overflow: scroll;\n            height: 95%;\n            color: #111;\n            padding: 20px 5%;\n            \n            & > h2 {\n                margin-bottom: 10px;\n            }\n\n            & > ol {\n                margin-left: 0;\n                padding-left: 20px;\n                list-style-position: outside;\n                & > li {\n                    margin: 10px 0;\n                }\n\n            }\n\n            & > ul {\n                margin-left: 0;\n                padding-left: 20px;\n                & > li {\n                    margin: 10px 0;\n                }\n            }\n\n            & > .img-container {\n                width: 100%;\n                padding: 0;\n\n                & > img {\n                    width: 90%;\n                    margin-top: 20px;\n                }\n            }\n\n        }\n    \n    `\n\n    const CloseBtn = styled.a`\n        text-align: right;\n\n        & > svg {\n            font-size: 1.4em;\n        }\n    `\n\n    \n    if (props.visible) {\n        return (\n            <ModalBg>\n                <div className='close-btn'>\n                    <div className='title'>\n                        \n                        Game Rules\n                        \n                    </div>\n                    <CloseBtn onClick={props.setVisibility}>\n                        <MdClose />\n                    </CloseBtn>\n                </div>\n                <div className='content'>\n                    \n                    <h2>Play</h2>\n                    <ol>\n                        <li>\n                            Called numbers will show in the <i><b>Calls</b></i> module. <br />\n                            Only the Designated Caller (player who started the game) can see the <i><b>Call It</b></i> button to make calls.\n                        </li>\n                        <li>\n                            If any of your cards contain the called number. Mark it by clicking on the number. \n                        </li>\n                        <li>\n                            Follow and mark along as the caller calls out new numbers.\n                        </li>\n                        <li>\n                            If any of your cards have the one of winning patterns (shown below). Click the <b>Call Bingo</b> button.\n                        </li>\n                        <li>\n                            First player to <b>Call Bingo</b> WINS the game.\n                        </li>\n                    </ol>\n\n\n                    <br />\n                    <h2>Winning Patterns</h2>\n                    A player with any complete rows or columns or diagonals can <b>Call Bingo!</b>\n                    <div className='img-container'>\n                        <img src={Rules} />\n                    </div>\n                    \n                    <br />\n                    <h2>Roles</h2>\n                    <ul>\n                        <li>\n                            <b>The Caller</b><br />\n                            The person to start the game is the desginated caller or the game admin. \n                            <ul>\n                                <li>\n                                    The caller can invite players to the game by sharing the game url\n                                </li>\n                                <li>\n                                    Only the caller can see the <i><b>Call It</b></i> button\n                                </li>\n                                <li>\n                                    Clicking the <i><b>Call It</b></i> button will display the number to all players. The caller can choose to announce this number to players as well.\n                                    <br /><br />\n                                </li>\n                            </ul>\n                        </li>\n\n                        <li>\n                            <b>The Players</b><br /> \n                            <ul>\n                                <li>\n                                    At the start, every player (including the caller) gets a bingo card\n                                </li>\n                                <li>\n                                    A player can have a maximum of 3 cards\n                                </li>\n                            </ul>\n                        </li>\n  \n                        \n                    </ul>\n\n                    <br />\n            \n                </div>\n            </ModalBg>\n        )\n\n    } else {\n        return null\n    }\n\n        \n}\n\nexport default ModalRules","/Users/rrahate/Code/bingodaddy/src/components/molecules/growl.js",["362","363"],[],"import styled from '@emotion/styled'\nimport { css, keyframes } from '@emotion/react'\nimport { MdClose } from \"react-icons/md\";\nimport { useEffect } from 'react';\n\nfunction Growl(props) {\n\n    const GrowlBg = styled.div`\n        width: 100%;\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: center;\n        z-index: 20;\n        color: #fff;\n        background-color: #111;\n\n    `\n\n    const show = keyframes`\n        0% {\n            top: -100px;\n        }\n       \n        100% {\n            top: 0;\n        }\n    `\n\n    const hide = keyframes`\n       10% {\n            top: 0;\n        }\n\n        80% {\n            top: 0;\n        }\n       \n        100% {\n            top: -100px;\n        }\n    `\n\n    const GrowlCont = styled.div`\n        \n        position: absolute;\n        background-color: #fff;\n        width: 50%;\n        padding: 10px 30px;\n        color: #fff;\n        background-color: #111;\n        border: 1px solid #111;\n        border-top-width: 0px;\n        border-radius: 0 0 10px 10px;\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        animation: ${show} 1s ease 1, ${hide} 3s ease 1;\n\n        & > div {\n            cursor: pointer;\n        }\n    \n    `\n    \n \n\n    if (props.visible) {\n        return (\n            <GrowlBg>\n                <GrowlCont>\n                    {props.content}\n                    <div onClick={props.closeGrowl}><MdClose /></div>    \n                </GrowlCont>\n                \n            </GrowlBg>\n        )\n    } else {\n        return null\n    }\n}\n\nexport default Growl",{"ruleId":"364","severity":1,"message":"365","line":2,"column":10,"nodeType":"366","messageId":"367","endLine":2,"endColumn":17},{"ruleId":"364","severity":1,"message":"368","line":2,"column":19,"nodeType":"366","messageId":"367","endLine":2,"endColumn":23},{"ruleId":"364","severity":1,"message":"369","line":7,"column":3,"nodeType":"366","messageId":"367","endLine":7,"endColumn":22},{"ruleId":"364","severity":1,"message":"370","line":15,"column":8,"nodeType":"366","messageId":"367","endLine":15,"endColumn":12},{"ruleId":"364","severity":1,"message":"371","line":16,"column":8,"nodeType":"366","messageId":"367","endLine":16,"endColumn":17},{"ruleId":"364","severity":1,"message":"372","line":3,"column":10,"nodeType":"366","messageId":"367","endLine":3,"endColumn":18},{"ruleId":"364","severity":1,"message":"373","line":9,"column":58,"nodeType":"366","messageId":"367","endLine":9,"endColumn":68},{"ruleId":"364","severity":1,"message":"374","line":106,"column":23,"nodeType":"366","messageId":"367","endLine":106,"endColumn":35},{"ruleId":"364","severity":1,"message":"375","line":108,"column":12,"nodeType":"366","messageId":"367","endLine":108,"endColumn":22},{"ruleId":"364","severity":1,"message":"376","line":108,"column":24,"nodeType":"366","messageId":"367","endLine":108,"endColumn":37},{"ruleId":"364","severity":1,"message":"377","line":209,"column":15,"nodeType":"366","messageId":"367","endLine":209,"endColumn":22},{"ruleId":"364","severity":1,"message":"378","line":258,"column":19,"nodeType":"366","messageId":"367","endLine":258,"endColumn":33},{"ruleId":"364","severity":1,"message":"379","line":259,"column":19,"nodeType":"366","messageId":"367","endLine":259,"endColumn":32},{"ruleId":"380","severity":1,"message":"381","line":267,"column":9,"nodeType":"382","endLine":267,"endColumn":21,"suggestions":"383"},{"ruleId":"384","severity":1,"message":"385","line":274,"column":15,"nodeType":"386","endLine":274,"endColumn":37},{"ruleId":"384","severity":1,"message":"385","line":281,"column":20,"nodeType":"386","endLine":281,"endColumn":67},{"ruleId":"364","severity":1,"message":"387","line":11,"column":31,"nodeType":"366","messageId":"367","endLine":11,"endColumn":41},{"ruleId":"364","severity":1,"message":"388","line":11,"column":66,"nodeType":"366","messageId":"367","endLine":11,"endColumn":73},{"ruleId":"364","severity":1,"message":"389","line":11,"column":100,"nodeType":"366","messageId":"367","endLine":11,"endColumn":110},{"ruleId":"364","severity":1,"message":"390","line":16,"column":8,"nodeType":"366","messageId":"367","endLine":16,"endColumn":15},{"ruleId":"364","severity":1,"message":"391","line":19,"column":8,"nodeType":"366","messageId":"367","endLine":19,"endColumn":14},{"ruleId":"364","severity":1,"message":"392","line":69,"column":17,"nodeType":"366","messageId":"367","endLine":69,"endColumn":21},{"ruleId":"380","severity":1,"message":"393","line":79,"column":7,"nodeType":"382","endLine":79,"endColumn":9,"suggestions":"394"},{"ruleId":"380","severity":1,"message":"395","line":91,"column":7,"nodeType":"382","endLine":91,"endColumn":16,"suggestions":"396"},{"ruleId":"364","severity":1,"message":"397","line":96,"column":13,"nodeType":"366","messageId":"367","endLine":96,"endColumn":24},{"ruleId":"364","severity":1,"message":"398","line":112,"column":13,"nodeType":"366","messageId":"367","endLine":112,"endColumn":23},{"ruleId":"364","severity":1,"message":"398","line":214,"column":21,"nodeType":"366","messageId":"367","endLine":214,"endColumn":31},{"ruleId":"380","severity":1,"message":"393","line":257,"column":9,"nodeType":"382","endLine":257,"endColumn":31,"suggestions":"399"},{"ruleId":"364","severity":1,"message":"400","line":279,"column":21,"nodeType":"366","messageId":"367","endLine":279,"endColumn":34},{"ruleId":"364","severity":1,"message":"401","line":281,"column":21,"nodeType":"366","messageId":"367","endLine":281,"endColumn":32},{"ruleId":"380","severity":1,"message":"402","line":292,"column":9,"nodeType":"382","endLine":292,"endColumn":21,"suggestions":"403"},{"ruleId":"380","severity":1,"message":"404","line":310,"column":9,"nodeType":"382","endLine":310,"endColumn":23,"suggestions":"405"},{"ruleId":"406","severity":1,"message":"407","line":322,"column":73,"nodeType":"408","messageId":"409","endLine":322,"endColumn":75},{"ruleId":"364","severity":1,"message":"410","line":346,"column":21,"nodeType":"366","messageId":"367","endLine":346,"endColumn":35},{"ruleId":"364","severity":1,"message":"411","line":379,"column":19,"nodeType":"366","messageId":"367","endLine":379,"endColumn":34},{"ruleId":"380","severity":1,"message":"412","line":419,"column":9,"nodeType":"382","endLine":419,"endColumn":23,"suggestions":"413"},{"ruleId":"364","severity":1,"message":"414","line":439,"column":13,"nodeType":"366","messageId":"367","endLine":439,"endColumn":25},{"ruleId":"384","severity":1,"message":"385","line":534,"column":21,"nodeType":"386","endLine":534,"endColumn":53},{"ruleId":"364","severity":1,"message":"415","line":1,"column":31,"nodeType":"366","messageId":"367","endLine":1,"endColumn":38},{"ruleId":"364","severity":1,"message":"416","line":4,"column":21,"nodeType":"366","messageId":"367","endLine":4,"endColumn":32},{"ruleId":"364","severity":1,"message":"387","line":8,"column":31,"nodeType":"366","messageId":"367","endLine":8,"endColumn":41},{"ruleId":"364","severity":1,"message":"388","line":8,"column":66,"nodeType":"366","messageId":"367","endLine":8,"endColumn":73},{"ruleId":"364","severity":1,"message":"417","line":8,"column":87,"nodeType":"366","messageId":"367","endLine":8,"endColumn":98},{"ruleId":"364","severity":1,"message":"389","line":8,"column":100,"nodeType":"366","messageId":"367","endLine":8,"endColumn":110},{"ruleId":"364","severity":1,"message":"418","line":13,"column":11,"nodeType":"366","messageId":"367","endLine":13,"endColumn":16},{"ruleId":"364","severity":1,"message":"419","line":61,"column":12,"nodeType":"366","messageId":"367","endLine":61,"endColumn":19},{"ruleId":"364","severity":1,"message":"420","line":61,"column":21,"nodeType":"366","messageId":"367","endLine":61,"endColumn":31},{"ruleId":"380","severity":1,"message":"421","line":74,"column":7,"nodeType":"382","endLine":74,"endColumn":20,"suggestions":"422"},{"ruleId":"380","severity":1,"message":"404","line":101,"column":7,"nodeType":"382","endLine":101,"endColumn":9,"suggestions":"423"},{"ruleId":"364","severity":1,"message":"424","line":103,"column":14,"nodeType":"366","messageId":"367","endLine":103,"endColumn":25},{"ruleId":"406","severity":1,"message":"407","line":112,"column":18,"nodeType":"408","messageId":"409","endLine":112,"endColumn":20},{"ruleId":"406","severity":1,"message":"407","line":122,"column":13,"nodeType":"408","messageId":"409","endLine":122,"endColumn":15},{"ruleId":"364","severity":1,"message":"425","line":141,"column":19,"nodeType":"366","messageId":"367","endLine":141,"endColumn":31},{"ruleId":"364","severity":1,"message":"426","line":145,"column":19,"nodeType":"366","messageId":"367","endLine":145,"endColumn":32},{"ruleId":"380","severity":1,"message":"404","line":180,"column":9,"nodeType":"382","endLine":180,"endColumn":43,"suggestions":"427"},{"ruleId":"364","severity":1,"message":"425","line":202,"column":15,"nodeType":"366","messageId":"367","endLine":202,"endColumn":27},{"ruleId":"380","severity":1,"message":"428","line":224,"column":7,"nodeType":"382","endLine":224,"endColumn":17,"suggestions":"429"},{"ruleId":"430","severity":1,"message":"431","line":250,"column":35,"nodeType":"408","messageId":"432","endLine":250,"endColumn":36},{"ruleId":"430","severity":1,"message":"431","line":262,"column":43,"nodeType":"408","messageId":"432","endLine":262,"endColumn":44},{"ruleId":"430","severity":1,"message":"431","line":266,"column":42,"nodeType":"408","messageId":"432","endLine":266,"endColumn":43},{"ruleId":"430","severity":1,"message":"431","line":266,"column":55,"nodeType":"408","messageId":"432","endLine":266,"endColumn":56},{"ruleId":"430","severity":1,"message":"431","line":266,"column":68,"nodeType":"408","messageId":"432","endLine":266,"endColumn":69},{"ruleId":"430","severity":1,"message":"431","line":280,"column":43,"nodeType":"408","messageId":"432","endLine":280,"endColumn":44},{"ruleId":"430","severity":1,"message":"431","line":284,"column":46,"nodeType":"408","messageId":"432","endLine":284,"endColumn":47},{"ruleId":"430","severity":1,"message":"431","line":284,"column":59,"nodeType":"408","messageId":"432","endLine":284,"endColumn":60},{"ruleId":"430","severity":1,"message":"431","line":284,"column":73,"nodeType":"408","messageId":"432","endLine":284,"endColumn":74},{"ruleId":"430","severity":1,"message":"431","line":297,"column":43,"nodeType":"408","messageId":"432","endLine":297,"endColumn":44},{"ruleId":"430","severity":1,"message":"431","line":301,"column":46,"nodeType":"408","messageId":"432","endLine":301,"endColumn":47},{"ruleId":"430","severity":1,"message":"431","line":301,"column":59,"nodeType":"408","messageId":"432","endLine":301,"endColumn":60},{"ruleId":"430","severity":1,"message":"431","line":301,"column":73,"nodeType":"408","messageId":"432","endLine":301,"endColumn":74},{"ruleId":"406","severity":1,"message":"407","line":308,"column":43,"nodeType":"408","messageId":"409","endLine":308,"endColumn":45},{"ruleId":"430","severity":1,"message":"431","line":314,"column":43,"nodeType":"408","messageId":"432","endLine":314,"endColumn":44},{"ruleId":"430","severity":1,"message":"431","line":318,"column":42,"nodeType":"408","messageId":"432","endLine":318,"endColumn":43},{"ruleId":"430","severity":1,"message":"431","line":318,"column":55,"nodeType":"408","messageId":"432","endLine":318,"endColumn":56},{"ruleId":"430","severity":1,"message":"431","line":318,"column":69,"nodeType":"408","messageId":"432","endLine":318,"endColumn":70},{"ruleId":"430","severity":1,"message":"431","line":331,"column":43,"nodeType":"408","messageId":"432","endLine":331,"endColumn":44},{"ruleId":"430","severity":1,"message":"431","line":335,"column":42,"nodeType":"408","messageId":"432","endLine":335,"endColumn":43},{"ruleId":"430","severity":1,"message":"431","line":335,"column":55,"nodeType":"408","messageId":"432","endLine":335,"endColumn":56},{"ruleId":"430","severity":1,"message":"431","line":335,"column":69,"nodeType":"408","messageId":"432","endLine":335,"endColumn":70},{"ruleId":"364","severity":1,"message":"433","line":2,"column":8,"nodeType":"366","messageId":"367","endLine":2,"endColumn":14},{"ruleId":"364","severity":1,"message":"434","line":3,"column":15,"nodeType":"366","messageId":"367","endLine":3,"endColumn":21},{"ruleId":"364","severity":1,"message":"435","line":3,"column":23,"nodeType":"366","messageId":"367","endLine":3,"endColumn":29},{"ruleId":"364","severity":1,"message":"436","line":15,"column":12,"nodeType":"366","messageId":"367","endLine":15,"endColumn":24},{"ruleId":"364","severity":1,"message":"437","line":15,"column":26,"nodeType":"366","messageId":"367","endLine":15,"endColumn":41},{"ruleId":"406","severity":1,"message":"407","line":39,"column":31,"nodeType":"408","messageId":"409","endLine":39,"endColumn":33},{"ruleId":"380","severity":1,"message":"438","line":42,"column":7,"nodeType":"382","endLine":42,"endColumn":20,"suggestions":"439"},{"ruleId":"364","severity":1,"message":"398","line":54,"column":23,"nodeType":"366","messageId":"367","endLine":54,"endColumn":33},{"ruleId":"364","severity":1,"message":"440","line":58,"column":23,"nodeType":"366","messageId":"367","endLine":58,"endColumn":38},{"ruleId":"380","severity":1,"message":"441","line":67,"column":7,"nodeType":"382","endLine":67,"endColumn":23,"suggestions":"442"},{"ruleId":"380","severity":1,"message":"443","line":78,"column":7,"nodeType":"382","endLine":78,"endColumn":9,"suggestions":"444"},{"ruleId":"445","severity":1,"message":"446","line":124,"column":32,"nodeType":"386","endLine":124,"endColumn":67},{"ruleId":"406","severity":1,"message":"407","line":136,"column":51,"nodeType":"408","messageId":"409","endLine":136,"endColumn":53},{"ruleId":"364","severity":1,"message":"447","line":1,"column":10,"nodeType":"366","messageId":"367","endLine":1,"endColumn":18},{"ruleId":"364","severity":1,"message":"448","line":1,"column":20,"nodeType":"366","messageId":"367","endLine":1,"endColumn":29},{"ruleId":"364","severity":1,"message":"447","line":1,"column":10,"nodeType":"366","messageId":"367","endLine":1,"endColumn":18},{"ruleId":"364","severity":1,"message":"449","line":17,"column":11,"nodeType":"366","messageId":"367","endLine":17,"endColumn":19},{"ruleId":"430","severity":1,"message":"431","line":117,"column":49,"nodeType":"408","messageId":"432","endLine":117,"endColumn":50},{"ruleId":"430","severity":1,"message":"431","line":117,"column":62,"nodeType":"408","messageId":"432","endLine":117,"endColumn":63},{"ruleId":"364","severity":1,"message":"447","line":1,"column":10,"nodeType":"366","messageId":"367","endLine":1,"endColumn":18},{"ruleId":"364","severity":1,"message":"450","line":1,"column":20,"nodeType":"366","messageId":"367","endLine":1,"endColumn":26},{"ruleId":"364","severity":1,"message":"434","line":1,"column":15,"nodeType":"366","messageId":"367","endLine":1,"endColumn":21},{"ruleId":"364","severity":1,"message":"387","line":1,"column":31,"nodeType":"366","messageId":"367","endLine":1,"endColumn":41},{"ruleId":"364","severity":1,"message":"451","line":1,"column":43,"nodeType":"366","messageId":"367","endLine":1,"endColumn":52},{"ruleId":"364","severity":1,"message":"452","line":1,"column":54,"nodeType":"366","messageId":"367","endLine":1,"endColumn":64},{"ruleId":"364","severity":1,"message":"388","line":1,"column":66,"nodeType":"366","messageId":"367","endLine":1,"endColumn":73},{"ruleId":"364","severity":1,"message":"373","line":1,"column":75,"nodeType":"366","messageId":"367","endLine":1,"endColumn":85},{"ruleId":"364","severity":1,"message":"450","line":1,"column":20,"nodeType":"366","messageId":"367","endLine":1,"endColumn":26},{"ruleId":"364","severity":1,"message":"448","line":1,"column":28,"nodeType":"366","messageId":"367","endLine":1,"endColumn":37},{"ruleId":"364","severity":1,"message":"453","line":1,"column":39,"nodeType":"366","messageId":"367","endLine":1,"endColumn":50},{"ruleId":"364","severity":1,"message":"454","line":11,"column":9,"nodeType":"366","messageId":"367","endLine":11,"endColumn":18},{"ruleId":"364","severity":1,"message":"455","line":41,"column":14,"nodeType":"366","messageId":"367","endLine":41,"endColumn":20},{"ruleId":"364","severity":1,"message":"453","line":1,"column":31,"nodeType":"366","messageId":"367","endLine":1,"endColumn":42},{"ruleId":"364","severity":1,"message":"456","line":1,"column":44,"nodeType":"366","messageId":"367","endLine":1,"endColumn":52},{"ruleId":"364","severity":1,"message":"457","line":44,"column":11,"nodeType":"366","messageId":"367","endLine":44,"endColumn":17},{"ruleId":"406","severity":1,"message":"407","line":51,"column":47,"nodeType":"408","messageId":"409","endLine":51,"endColumn":49},{"ruleId":"364","severity":1,"message":"458","line":3,"column":10,"nodeType":"366","messageId":"367","endLine":3,"endColumn":24},{"ruleId":"364","severity":1,"message":"435","line":6,"column":15,"nodeType":"366","messageId":"367","endLine":6,"endColumn":21},{"ruleId":"364","severity":1,"message":"459","line":21,"column":11,"nodeType":"366","messageId":"367","endLine":21,"endColumn":22},{"ruleId":"364","severity":1,"message":"460","line":21,"column":24,"nodeType":"366","messageId":"367","endLine":21,"endColumn":38},{"ruleId":"364","severity":1,"message":"461","line":22,"column":11,"nodeType":"366","messageId":"367","endLine":22,"endColumn":22},{"ruleId":"364","severity":1,"message":"462","line":22,"column":24,"nodeType":"366","messageId":"367","endLine":22,"endColumn":38},{"ruleId":"364","severity":1,"message":"463","line":24,"column":11,"nodeType":"366","messageId":"367","endLine":24,"endColumn":19},{"ruleId":"380","severity":1,"message":"464","line":81,"column":7,"nodeType":"382","endLine":81,"endColumn":9,"suggestions":"465"},{"ruleId":"364","severity":1,"message":"447","line":1,"column":10,"nodeType":"366","messageId":"367","endLine":1,"endColumn":18},{"ruleId":"364","severity":1,"message":"448","line":1,"column":20,"nodeType":"366","messageId":"367","endLine":1,"endColumn":29},{"ruleId":"364","severity":1,"message":"466","line":4,"column":8,"nodeType":"366","messageId":"367","endLine":4,"endColumn":13},{"ruleId":"364","severity":1,"message":"467","line":8,"column":11,"nodeType":"366","messageId":"367","endLine":8,"endColumn":15},{"ruleId":"430","severity":1,"message":"431","line":26,"column":41,"nodeType":"408","messageId":"432","endLine":26,"endColumn":42},{"ruleId":"430","severity":1,"message":"431","line":26,"column":54,"nodeType":"408","messageId":"432","endLine":26,"endColumn":55},{"ruleId":"364","severity":1,"message":"447","line":1,"column":10,"nodeType":"366","messageId":"367","endLine":1,"endColumn":18},{"ruleId":"364","severity":1,"message":"468","line":4,"column":8,"nodeType":"366","messageId":"367","endLine":4,"endColumn":14},{"ruleId":"430","severity":1,"message":"431","line":77,"column":41,"nodeType":"408","messageId":"432","endLine":77,"endColumn":42},{"ruleId":"430","severity":1,"message":"431","line":77,"column":54,"nodeType":"408","messageId":"432","endLine":77,"endColumn":55},{"ruleId":"364","severity":1,"message":"447","line":1,"column":10,"nodeType":"366","messageId":"367","endLine":1,"endColumn":18},{"ruleId":"406","severity":1,"message":"407","line":79,"column":14,"nodeType":"408","messageId":"409","endLine":79,"endColumn":16},{"ruleId":"380","severity":1,"message":"469","line":83,"column":7,"nodeType":"382","endLine":83,"endColumn":9,"suggestions":"470"},{"ruleId":"380","severity":1,"message":"393","line":95,"column":7,"nodeType":"382","endLine":95,"endColumn":9,"suggestions":"471"},{"ruleId":"364","severity":1,"message":"397","line":129,"column":23,"nodeType":"366","messageId":"367","endLine":129,"endColumn":34},{"ruleId":"364","severity":1,"message":"472","line":133,"column":19,"nodeType":"366","messageId":"367","endLine":133,"endColumn":34},{"ruleId":"364","severity":1,"message":"473","line":134,"column":19,"nodeType":"366","messageId":"367","endLine":134,"endColumn":39},{"ruleId":"384","severity":1,"message":"385","line":150,"column":15,"nodeType":"386","endLine":150,"endColumn":37},{"ruleId":"384","severity":1,"message":"385","line":153,"column":20,"nodeType":"386","endLine":153,"endColumn":67},{"ruleId":"364","severity":1,"message":"447","line":1,"column":10,"nodeType":"366","messageId":"367","endLine":1,"endColumn":18},{"ruleId":"364","severity":1,"message":"433","line":2,"column":8,"nodeType":"366","messageId":"367","endLine":2,"endColumn":14},{"ruleId":"364","severity":1,"message":"474","line":3,"column":10,"nodeType":"366","messageId":"367","endLine":3,"endColumn":13},{"ruleId":"364","severity":1,"message":"434","line":3,"column":15,"nodeType":"366","messageId":"367","endLine":3,"endColumn":21},{"ruleId":"364","severity":1,"message":"435","line":3,"column":23,"nodeType":"366","messageId":"367","endLine":3,"endColumn":29},{"ruleId":"364","severity":1,"message":"451","line":3,"column":31,"nodeType":"366","messageId":"367","endLine":3,"endColumn":40},{"ruleId":"364","severity":1,"message":"373","line":3,"column":42,"nodeType":"366","messageId":"367","endLine":3,"endColumn":52},{"ruleId":"364","severity":1,"message":"452","line":3,"column":54,"nodeType":"366","messageId":"367","endLine":3,"endColumn":64},{"ruleId":"364","severity":1,"message":"475","line":4,"column":10,"nodeType":"366","messageId":"367","endLine":4,"endColumn":12},{"ruleId":"364","severity":1,"message":"476","line":3,"column":8,"nodeType":"366","messageId":"367","endLine":3,"endColumn":13},{"ruleId":"364","severity":1,"message":"477","line":4,"column":8,"nodeType":"366","messageId":"367","endLine":4,"endColumn":19},{"ruleId":"380","severity":1,"message":"478","line":54,"column":5,"nodeType":"382","endLine":54,"endColumn":7,"suggestions":"479"},{"ruleId":"364","severity":1,"message":"456","line":3,"column":10,"nodeType":"366","messageId":"367","endLine":3,"endColumn":18},{"ruleId":"364","severity":1,"message":"415","line":1,"column":31,"nodeType":"366","messageId":"367","endLine":1,"endColumn":38},{"ruleId":"364","severity":1,"message":"416","line":4,"column":21,"nodeType":"366","messageId":"367","endLine":4,"endColumn":32},{"ruleId":"364","severity":1,"message":"480","line":5,"column":26,"nodeType":"366","messageId":"367","endLine":5,"endColumn":38},{"ruleId":"364","severity":1,"message":"368","line":6,"column":14,"nodeType":"366","messageId":"367","endLine":6,"endColumn":18},{"ruleId":"364","severity":1,"message":"481","line":7,"column":10,"nodeType":"366","messageId":"367","endLine":7,"endColumn":28},{"ruleId":"364","severity":1,"message":"434","line":8,"column":15,"nodeType":"366","messageId":"367","endLine":8,"endColumn":21},{"ruleId":"364","severity":1,"message":"387","line":8,"column":31,"nodeType":"366","messageId":"367","endLine":8,"endColumn":41},{"ruleId":"364","severity":1,"message":"451","line":8,"column":43,"nodeType":"366","messageId":"367","endLine":8,"endColumn":52},{"ruleId":"364","severity":1,"message":"452","line":8,"column":54,"nodeType":"366","messageId":"367","endLine":8,"endColumn":64},{"ruleId":"364","severity":1,"message":"388","line":8,"column":66,"nodeType":"366","messageId":"367","endLine":8,"endColumn":73},{"ruleId":"364","severity":1,"message":"373","line":8,"column":75,"nodeType":"366","messageId":"367","endLine":8,"endColumn":85},{"ruleId":"364","severity":1,"message":"417","line":8,"column":87,"nodeType":"366","messageId":"367","endLine":8,"endColumn":98},{"ruleId":"364","severity":1,"message":"389","line":8,"column":100,"nodeType":"366","messageId":"367","endLine":8,"endColumn":110},{"ruleId":"364","severity":1,"message":"372","line":9,"column":10,"nodeType":"366","messageId":"367","endLine":9,"endColumn":18},{"ruleId":"364","severity":1,"message":"419","line":61,"column":12,"nodeType":"366","messageId":"367","endLine":61,"endColumn":19},{"ruleId":"364","severity":1,"message":"420","line":61,"column":21,"nodeType":"366","messageId":"367","endLine":61,"endColumn":31},{"ruleId":"364","severity":1,"message":"482","line":63,"column":12,"nodeType":"366","messageId":"367","endLine":63,"endColumn":20},{"ruleId":"364","severity":1,"message":"483","line":63,"column":22,"nodeType":"366","messageId":"367","endLine":63,"endColumn":33},{"ruleId":"364","severity":1,"message":"484","line":64,"column":12,"nodeType":"366","messageId":"367","endLine":64,"endColumn":24},{"ruleId":"364","severity":1,"message":"485","line":64,"column":26,"nodeType":"366","messageId":"367","endLine":64,"endColumn":41},{"ruleId":"364","severity":1,"message":"462","line":65,"column":25,"nodeType":"366","messageId":"367","endLine":65,"endColumn":39},{"ruleId":"380","severity":1,"message":"486","line":88,"column":7,"nodeType":"382","endLine":88,"endColumn":18,"suggestions":"487"},{"ruleId":"364","severity":1,"message":"463","line":116,"column":11,"nodeType":"366","messageId":"367","endLine":116,"endColumn":19},{"ruleId":"364","severity":1,"message":"424","line":121,"column":14,"nodeType":"366","messageId":"367","endLine":121,"endColumn":25},{"ruleId":"364","severity":1,"message":"488","line":126,"column":14,"nodeType":"366","messageId":"367","endLine":126,"endColumn":19},{"ruleId":"406","severity":1,"message":"407","line":130,"column":18,"nodeType":"408","messageId":"409","endLine":130,"endColumn":20},{"ruleId":"406","severity":1,"message":"407","line":140,"column":13,"nodeType":"408","messageId":"409","endLine":140,"endColumn":15},{"ruleId":"430","severity":1,"message":"431","line":167,"column":35,"nodeType":"408","messageId":"432","endLine":167,"endColumn":36},{"ruleId":"430","severity":1,"message":"431","line":179,"column":43,"nodeType":"408","messageId":"432","endLine":179,"endColumn":44},{"ruleId":"430","severity":1,"message":"431","line":183,"column":42,"nodeType":"408","messageId":"432","endLine":183,"endColumn":43},{"ruleId":"430","severity":1,"message":"431","line":183,"column":55,"nodeType":"408","messageId":"432","endLine":183,"endColumn":56},{"ruleId":"430","severity":1,"message":"431","line":183,"column":68,"nodeType":"408","messageId":"432","endLine":183,"endColumn":69},{"ruleId":"430","severity":1,"message":"431","line":196,"column":43,"nodeType":"408","messageId":"432","endLine":196,"endColumn":44},{"ruleId":"430","severity":1,"message":"431","line":200,"column":46,"nodeType":"408","messageId":"432","endLine":200,"endColumn":47},{"ruleId":"430","severity":1,"message":"431","line":200,"column":59,"nodeType":"408","messageId":"432","endLine":200,"endColumn":60},{"ruleId":"430","severity":1,"message":"431","line":200,"column":73,"nodeType":"408","messageId":"432","endLine":200,"endColumn":74},{"ruleId":"430","severity":1,"message":"431","line":213,"column":43,"nodeType":"408","messageId":"432","endLine":213,"endColumn":44},{"ruleId":"430","severity":1,"message":"431","line":217,"column":46,"nodeType":"408","messageId":"432","endLine":217,"endColumn":47},{"ruleId":"430","severity":1,"message":"431","line":217,"column":59,"nodeType":"408","messageId":"432","endLine":217,"endColumn":60},{"ruleId":"430","severity":1,"message":"431","line":217,"column":73,"nodeType":"408","messageId":"432","endLine":217,"endColumn":74},{"ruleId":"406","severity":1,"message":"407","line":223,"column":43,"nodeType":"408","messageId":"409","endLine":223,"endColumn":45},{"ruleId":"430","severity":1,"message":"431","line":229,"column":43,"nodeType":"408","messageId":"432","endLine":229,"endColumn":44},{"ruleId":"430","severity":1,"message":"431","line":233,"column":42,"nodeType":"408","messageId":"432","endLine":233,"endColumn":43},{"ruleId":"430","severity":1,"message":"431","line":233,"column":55,"nodeType":"408","messageId":"432","endLine":233,"endColumn":56},{"ruleId":"430","severity":1,"message":"431","line":233,"column":69,"nodeType":"408","messageId":"432","endLine":233,"endColumn":70},{"ruleId":"430","severity":1,"message":"431","line":245,"column":43,"nodeType":"408","messageId":"432","endLine":245,"endColumn":44},{"ruleId":"430","severity":1,"message":"431","line":249,"column":42,"nodeType":"408","messageId":"432","endLine":249,"endColumn":43},{"ruleId":"430","severity":1,"message":"431","line":249,"column":55,"nodeType":"408","messageId":"432","endLine":249,"endColumn":56},{"ruleId":"430","severity":1,"message":"431","line":249,"column":69,"nodeType":"408","messageId":"432","endLine":249,"endColumn":70},{"ruleId":"364","severity":1,"message":"447","line":1,"column":10,"nodeType":"366","messageId":"367","endLine":1,"endColumn":18},{"ruleId":"364","severity":1,"message":"448","line":1,"column":20,"nodeType":"366","messageId":"367","endLine":1,"endColumn":29},{"ruleId":"384","severity":1,"message":"385","line":135,"column":25,"nodeType":"386","endLine":135,"endColumn":44},{"ruleId":"364","severity":1,"message":"489","line":2,"column":10,"nodeType":"366","messageId":"367","endLine":2,"endColumn":13},{"ruleId":"364","severity":1,"message":"448","line":4,"column":10,"nodeType":"366","messageId":"367","endLine":4,"endColumn":19},"no-unused-vars","'FireApp' is defined but never used.","Identifier","unusedVar","'Auth' is defined but never used.","'createBrowserRouter' is defined but never used.","'Form' is defined but never used.","'Fireworks' is defined but never used.","'useTheme' is defined but never used.","'onSnapshot' is defined but never used.","'setSessionID' is assigned a value but never used.","'playerData' is assigned a value but never used.","'setPlayerData' is assigned a value but never used.","'docSnap' is assigned a value but never used.","'sessionDocSnap' is assigned a value but never used.","'playerDocSnap' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'adminID', 'join', 'navigate', and 'sessionID'. Either include them or remove the dependency array.","ArrayExpression",["490"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'collection' is defined but never used.","'getDocs' is defined but never used.","'writeBatch' is defined but never used.","'Players' is defined but never used.","'Layout' is defined but never used.","'play' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'gameid'. Either include it or remove the dependency array.",["491"],"React Hook useEffect has missing dependencies: 'adminID', 'gameid', 'navigate', 'playerID', and 'playerName'. Either include them or remove the dependency array.",["492"],"'setGameStop' is assigned a value but never used.","'writeArray' is assigned a value but never used.",["493"],"'setPlayerSnap' is assigned a value but never used.","'setGameSnap' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'gameid', 'newPlayer', and 'playerID'. Either include them or remove the dependency array.",["494"],"React Hook useEffect has missing dependencies: 'gameid' and 'playerID'. Either include them or remove the dependency array.",["495"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'writeCardArray' is assigned a value but never used.","'writeBingoArray' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'growlVisible'. Either include it or remove the dependency array.",["496"],"'canvasStyles' is assigned a value but never used.","'useMemo' is defined but never used.","'useNavigate' is defined but never used.","'arrayRemove' is defined but never used.","'theme' is assigned a value but never used.","'bCalled' is assigned a value but never used.","'setBCalled' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'GetClickedCells'. Either include it or remove the dependency array.",["497"],["498"],"'bingoCalled' is defined but never used.","'setCardsSnap' is assigned a value but never used.","'setCardsSnap2' is assigned a value but never used.",["499"],"React Hook useEffect has a missing dependency: 'getCards'. Either include it or remove the dependency array.",["500"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'styled' is defined but never used.","'setDoc' is defined but never used.","'getDoc' is defined but never used.","'modalContent' is assigned a value but never used.","'setModalContent' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["501"],"'writeCallNumber' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'callsRef'. Either include it or remove the dependency array.",["502"],"React Hook useEffect has a missing dependency: 'props.gameid'. Either include it or remove the dependency array.",["503"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","'useEffect' is defined but never used.","'CallsRow' is assigned a value but never used.","'useRef' is defined but never used.","'updateDoc' is defined but never used.","'arrayUnion' is defined but never used.","'useCallback' is defined but never used.","'Container' is assigned a value but never used.","'cancel' is defined but never used.","'Children' is defined but never used.","'gameid' is assigned a value but never used.","'ReturnCardData' is defined but never used.","'playerCards' is assigned a value but never used.","'setPlayerCards' is assigned a value but never used.","'calledArray' is assigned a value but never used.","'setCalledArray' is assigned a value but never used.","'callsRef' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.calledList'. Either include it or remove the dependency array.",["504"],"'Modal' is defined but never used.","'Pill' is assigned a value but never used.","'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'gameid', 'location.state.admin', and 'location.state.playerID'. Either include them or remove the dependency array.",["505"],["506"],"'playerCardClear' is assigned a value but never used.","'playerCardClickClear' is assigned a value but never used.","'doc' is defined but never used.","'DB' is defined but never used.","'bgwin' is defined but never used.","'BingoCalled' is defined but never used.","React Hook useEffect has a missing dependency: 'nextTickAnimation'. Either include it or remove the dependency array.",["507"],"'GenerateCard' is defined but never used.","'onAuthStateChanged' is defined but never used.","'playerID' is assigned a value but never used.","'setPlayerID' is assigned a value but never used.","'newCardAdded' is assigned a value but never used.","'setNewCardAdded' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'GetClickedCells' and 'getCards'. Either include them or remove the dependency array.",["508"],"'check' is defined but never used.","'css' is defined but never used.",{"desc":"509","fix":"510"},{"desc":"511","fix":"512"},{"desc":"513","fix":"514"},{"desc":"515","fix":"516"},{"desc":"517","fix":"518"},{"desc":"519","fix":"520"},{"desc":"521","fix":"522"},{"desc":"523","fix":"524"},{"desc":"525","fix":"526"},{"desc":"527","fix":"528"},{"desc":"529","fix":"530"},{"desc":"531","fix":"532"},{"desc":"533","fix":"534"},{"desc":"535","fix":"536"},{"desc":"537","fix":"538"},{"desc":"539","fix":"540"},{"desc":"511","fix":"541"},{"desc":"542","fix":"543"},{"desc":"544","fix":"545"},"Update the dependencies array to be: [adminID, join, navigate, playerName, sessionID]",{"range":"546","text":"547"},"Update the dependencies array to be: [gameid]",{"range":"548","text":"549"},"Update the dependencies array to be: [adminID, gameEnd, gameid, navigate, playerID, playerName]",{"range":"550","text":"551"},"Update the dependencies array to be: [gameid, playerID, playerList]",{"range":"552","text":"553"},"Update the dependencies array to be: [gameid, newPlayer, playerID, playerName]",{"range":"554","text":"555"},"Update the dependencies array to be: [gameid, newCardAdded, playerID]",{"range":"556","text":"557"},"Update the dependencies array to be: [growlContent, growlVisible]",{"range":"558","text":"559"},"Update the dependencies array to be: [GetClickedCells, props.calls]",{"range":"560","text":"561"},"Update the dependencies array to be: [gameid, playerID]",{"range":"562","text":"563"},"Update the dependencies array to be: [gameid, newCardAdded, playerID, props.newCardAdded]",{"range":"564","text":"565"},"Update the dependencies array to be: [getCards, playerID]",{"range":"566","text":"567"},"Update the dependencies array to be: [calledArray, props]",{"range":"568","text":"569"},"Update the dependencies array to be: [calledNumberDB, callsRef]",{"range":"570","text":"571"},"Update the dependencies array to be: [props.gameid]",{"range":"572","text":"573"},"Update the dependencies array to be: [props.calledList]",{"range":"574","text":"575"},"Update the dependencies array to be: [gameid, location.state.admin, location.state.playerID]",{"range":"576","text":"577"},{"range":"578","text":"549"},"Update the dependencies array to be: [nextTickAnimation]",{"range":"579","text":"580"},"Update the dependencies array to be: [GetClickedCells, getCards, props.pid]",{"range":"581","text":"582"},[6032,6044],"[adminID, join, navigate, playerName, sessionID]",[3238,3240],"[gameid]",[3506,3515],"[adminID, gameEnd, gameid, navigate, playerID, playerName]",[7808,7830],"[gameid, playerID, playerList]",[8802,8814],"[gameid, newPlayer, playerID, playerName]",[9206,9220],"[gameid, newCardAdded, playerID]",[11712,11726],"[growlContent, growlVisible]",[2183,2196],"[GetClickedCells, props.calls]",[2812,2814],"[gameid, playerID]",[4620,4654],"[gameid, newCardAdded, playerID, props.newCardAdded]",[5557,5567],"[getCards, playerID]",[1294,1307],"[calledArray, props]",[1809,1825],"[calledNumberDB, callsRef]",[2096,2098],"[props.gameid]",[2003,2005],"[props.calledList]",[1797,1799],"[gameid, location.state.admin, location.state.playerID]",[2025,2027],[1380,1382],"[nextTickAnimation]",[2547,2558],"[GetClickedCells, getCards, props.pid]"]